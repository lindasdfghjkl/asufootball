{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\src\\\\layout\\\\TrunkCard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport clsx from 'clsx';\nimport Input from '@material-ui/core/Input';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport QRCode from 'qrcode.react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nvar styles = {\n  card: {\n    width: '20%',\n    height: '25%',\n    margin: '2.5%'\n  },\n  floatRight: {\n    marginLeft: 'auto'\n  },\n  status: {\n    fontSize: 14\n  },\n  statusDropdown: {},\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto'\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  }\n};\n\nvar TrunkCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TrunkCard, _Component);\n\n  function TrunkCard(props) {\n    var _this;\n\n    _classCallCheck(this, TrunkCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TrunkCard).call(this, props));\n\n    _this.updateTrunkStatus = function (event) {\n      var postData = _this.props.trunk;\n      postData.status = event.target.value;\n      var updates = {};\n      updates['trunks/' + postData.key] = postData;\n      global.firebaseApp.database().ref().update(updates, function (error) {\n        if (error) {\n          console.log(error);\n        } else {\n          console.log(\"Success\");\n        }\n      });\n    };\n\n    _this.removeTrunk = function (event) {\n      var postData = _this.props.trunk;\n      var updates = {};\n      updates['trunks/' + postData.key] = null;\n      global.firebaseApp.database().ref().update(updates, function (error) {\n        if (error) {\n          console.log(error);\n        } else {\n          console.log(\"Success\");\n        }\n      });\n    };\n\n    _this.state = {\n      expanded: false\n    };\n    _this.handleExpandClick = _this.handleExpandClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TrunkCard, [{\n    key: \"getColorFromStatus\",\n    value: function getColorFromStatus(status) {\n      switch (status) {\n        case 0:\n          //red\n          return {\n            backgroundColor: '#cf0628'\n          };\n\n        case 1:\n          //orange\n          return {\n            backgroundColor: '#FF7F32'\n          };\n\n        case 2:\n          //green\n          return {\n            backgroundColor: '#78BE20'\n          };\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"handleExpandClick\",\n    value: function handleExpandClick() {\n      this.setState({\n        expanded: !this.state.expanded\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Styling\n      var classes = this.props.classes; // Properties\n\n      var _this$props = this.props,\n          trunk = _this$props.trunk,\n          key = _this$props.key;\n      var expanded = this.state.expanded.expanded;\n      return React.createElement(Card, {\n        className: classes.card,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        avatar: React.createElement(Avatar, {\n          \"aria-label\": \"statusIcon\",\n          style: this.getColorFromStatus(trunk.status),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }),\n        action: React.createElement(IconButton, {\n          \"aria-label\": \"Remove\",\n          onClick: this.removeTrunk,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        })),\n        title: React.createElement(FormControl, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(Select, {\n          value: trunk.status,\n          onChange: this.updateTrunkStatus,\n          displayEmpty: true,\n          name: \"status\",\n          className: classes.statusDropdown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(MenuItem, {\n          value: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \"Not Loaded\"), React.createElement(MenuItem, {\n          value: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"Loading\"), React.createElement(MenuItem, {\n          value: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, \"Loaded\"))) // subheader=\"September 14, 2016\"\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, trunk.name)), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: classes.floatRight,\n        to: \"/\" + trunk.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Edit Items\")));\n    }\n  }]);\n\n  return TrunkCard;\n}(Component);\n\nTrunkCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  trunk: PropTypes.object,\n  key: PropTypes.string,\n  alertOpen: PropTypes.bool,\n  handleOpenAlert: PropTypes.func,\n  handleCloseAlert: PropTypes.func,\n  handleRemoveTrunk: PropTypes.func\n};\nexport default withStyles(styles)(TrunkCard);","map":{"version":3,"sources":["C:\\Users\\xlind\\Documents\\ASUFootballEquipment\\app\\src\\layout\\TrunkCard.js"],"names":["React","Component","PropTypes","withStyles","Box","Card","CardHeader","CardActions","CardContent","Typography","Collapse","clsx","Input","OutlinedInput","FilledInput","InputLabel","MenuItem","FormHelperText","FormControl","Select","IconButton","CloseIcon","Button","Avatar","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","QRCode","ExpandMoreIcon","BrowserRouter","Router","Switch","Route","Link","styles","card","width","height","margin","floatRight","marginLeft","status","fontSize","statusDropdown","expand","transform","expandOpen","TrunkCard","props","updateTrunkStatus","event","postData","trunk","target","value","updates","key","global","firebaseApp","database","ref","update","error","console","log","removeTrunk","state","expanded","handleExpandClick","bind","backgroundColor","setState","classes","getColorFromStatus","name","propTypes","object","isRequired","string","alertOpen","bool","handleOpenAlert","func","handleCloseAlert","handleRemoveTrunk"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AAIA,IAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,KADH;AAEJC,IAAAA,MAAM,EAAE,KAFJ;AAGJC,IAAAA,MAAM,EAAE;AAHJ,GADO;AAMbC,EAAAA,UAAU,EAAE;AACVC,IAAAA,UAAU,EAAE;AADF,GANC;AASbC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GATK;AAYbC,EAAAA,cAAc,EAAE,EAZH;AAebC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,cADL;AAENL,IAAAA,UAAU,EAAE;AAFN,GAfK;AAmBbM,EAAAA,UAAU,EAAE;AACVD,IAAAA,SAAS,EAAE;AADD;AAnBC,CAAf;;IAwBME,S;;;;;AAEF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAQnBC,iBARmB,GAQC,UAACC,KAAD,EAAW;AAC3B,UAAIC,QAAQ,GAAG,MAAKH,KAAL,CAAWI,KAA1B;AACAD,MAAAA,QAAQ,CAACV,MAAT,GAAkBS,KAAK,CAACG,MAAN,CAAaC,KAA/B;AAEA,UAAIC,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,CAAC,YAAYJ,QAAQ,CAACK,GAAtB,CAAP,GAAoCL,QAApC;AAEAM,MAAAA,MAAM,CAACC,WAAP,CAAmBC,QAAnB,GAA8BC,GAA9B,GAAoCC,MAApC,CAA2CN,OAA3C,EACI,UAASO,KAAT,EAAgB;AACZ,YAAIA,KAAJ,EAAW;AACPC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ,OAPL;AASH,KAxBkB;;AAAA,UA0BnBC,WA1BmB,GA0BL,UAACf,KAAD,EAAW;AACrB,UAAIC,QAAQ,GAAG,MAAKH,KAAL,CAAWI,KAA1B;AACA,UAAIG,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,CAAC,YAAYJ,QAAQ,CAACK,GAAtB,CAAP,GAAoC,IAApC;AAEAC,MAAAA,MAAM,CAACC,WAAP,CAAmBC,QAAnB,GAA8BC,GAA9B,GAAoCC,MAApC,CAA2CN,OAA3C,EACI,UAASO,KAAT,EAAgB;AACZ,YAAIA,KAAJ,EAAW;AACPC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ,OAPL;AASH,KAxCkB;;AAEjB,UAAKE,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,+BAAzB;AALiB;AAMlB;;;;uCAoCkB5B,M,EAAQ;AACvB,cAAOA,MAAP;AACE,aAAK,CAAL;AACE;AACA,iBAAO;AAAC6B,YAAAA,eAAe,EAAE;AAAlB,WAAP;;AACF,aAAK,CAAL;AACE;AACA,iBAAO;AAACA,YAAAA,eAAe,EAAE;AAAlB,WAAP;;AACF,aAAK,CAAL;AACE;AACA,iBAAO;AAACA,YAAAA,eAAe,EAAE;AAAlB,WAAP;;AACF;AACE,iBAAO,IAAP;AAXJ;AAaD;;;wCAMmB;AAClB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAvB,OAAd;AACD;;;6BAEI;AACP;AADO,UAECK,OAFD,GAEa,KAAKxB,KAFlB,CAECwB,OAFD,EAIP;;AAJO,wBAKc,KAAKxB,KALnB;AAAA,UAKAI,KALA,eAKAA,KALA;AAAA,UAKOI,GALP,eAKOA,GALP;AAAA,UAOFW,QAPE,GAOU,KAAKD,KAAL,CAAWC,QAPrB,CAOFA,QAPE;AAWP,aACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEK,OAAO,CAACrC,IAAzB;AAA+B,QAAA,GAAG,EAAEqB,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,MAAM,EACF,oBAAC,MAAD;AAAQ,wBAAW,YAAnB;AAAgC,UAAA,KAAK,EAAE,KAAKiB,kBAAL,CAAwBrB,KAAK,CAACX,MAA9B,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAII,QAAA,MAAM,EACF,oBAAC,UAAD;AAAY,wBAAW,QAAvB;AAAgC,UAAA,OAAO,EAAE,KAAKwB,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CALR;AASI,QAAA,KAAK,EACL,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACQ,oBAAC,MAAD;AACI,UAAA,KAAK,EAAEb,KAAK,CAACX,MADjB;AAEI,UAAA,QAAQ,EAAE,KAAKQ,iBAFnB;AAGI,UAAA,YAAY,MAHhB;AAII,UAAA,IAAI,EAAC,QAJT;AAKI,UAAA,SAAS,EAAEuB,OAAO,CAAC7B,cALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOI,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,EAQI,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARJ,EASI,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,CADR,CAVJ,CAwBA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EA2BI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCS,KAAK,CAACsB,IADP,CADR,CA3BJ,EAgCI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEF,OAAO,CAACjC,UAAzB;AAAqC,QAAA,EAAE,EAAE,MAAMa,KAAK,CAACI,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAhCJ,CADJ;AAqDD;;;;EApIqBzD,S;;AAuIxBgD,SAAS,CAAC4B,SAAV,GAAsB;AACpBH,EAAAA,OAAO,EAAExE,SAAS,CAAC4E,MAAV,CAAiBC,UADN;AAEpBzB,EAAAA,KAAK,EAAEpD,SAAS,CAAC4E,MAFG;AAGpBpB,EAAAA,GAAG,EAAExD,SAAS,CAAC8E,MAHK;AAIpBC,EAAAA,SAAS,EAAE/E,SAAS,CAACgF,IAJD;AAKpBC,EAAAA,eAAe,EAAEjF,SAAS,CAACkF,IALP;AAMpBC,EAAAA,gBAAgB,EAAEnF,SAAS,CAACkF,IANR;AAOpBE,EAAAA,iBAAiB,EAAEpF,SAAS,CAACkF;AAPT,CAAtB;AAUA,eAAejF,UAAU,CAACiC,MAAD,CAAV,CAAmBa,SAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport clsx from 'clsx';\r\nimport Input from '@material-ui/core/Input';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport QRCode from 'qrcode.react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst styles = {\r\n  card: {\r\n    width: '20%',\r\n    height: '25%',\r\n    margin: '2.5%',\r\n  },\r\n  floatRight: {\r\n    marginLeft: 'auto',\r\n  },\r\n  status: {\r\n    fontSize: 14,\r\n  },\r\n  statusDropdown: {\r\n    \r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n};\r\n\r\nclass TrunkCard extends Component {\r\n\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        expanded: false\r\n      }\r\n      this.handleExpandClick = this.handleExpandClick.bind(this)\r\n    }\r\n  \r\n    updateTrunkStatus = (event) => {  \r\n        var postData = this.props.trunk;\r\n        postData.status = event.target.value;\r\n        \r\n        var updates = {};\r\n        updates['trunks/' + postData.key] = postData;\r\n\r\n        global.firebaseApp.database().ref().update(updates, \r\n            function(error) {\r\n                if (error) {\r\n                    console.log(error)\r\n                } else {\r\n                    console.log(\"Success\")\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    removeTrunk = (event) => {  \r\n        var postData = this.props.trunk;\r\n        var updates = {};\r\n        updates['trunks/' + postData.key] = null;\r\n\r\n        global.firebaseApp.database().ref().update(updates, \r\n            function(error) {\r\n                if (error) {\r\n                    console.log(error)\r\n                } else {\r\n                    console.log(\"Success\")\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    getColorFromStatus(status) {\r\n        switch(status) {\r\n          case 0:\r\n            //red\r\n            return {backgroundColor: '#cf0628'}\r\n          case 1:\r\n            //orange\r\n            return {backgroundColor: '#FF7F32'}\r\n          case 2:\r\n            //green\r\n            return {backgroundColor: '#78BE20'}\r\n          default:\r\n            return null;\r\n        }\r\n      }\r\n\r\n      \r\n  \r\n\r\n\r\n      handleExpandClick() {\r\n        this.setState({expanded: !this.state.expanded})\r\n      }\r\n\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n\r\n    // Properties\r\n    const {trunk, key} = this.props;\r\n\r\n    var {expanded} = this.state.expanded;\r\n\r\n\r\n\r\n    return (\r\n        <Card className={classes.card} key={key}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"statusIcon\" style={this.getColorFromStatus(trunk.status)}></Avatar>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"Remove\" onClick={this.removeTrunk}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                }\r\n                title={\r\n                <FormControl>\r\n                        <Select\r\n                            value={trunk.status}\r\n                            onChange={this.updateTrunkStatus}\r\n                            displayEmpty\r\n                            name=\"status\"\r\n                            className={classes.statusDropdown}\r\n                            >\r\n                            <MenuItem value={0}>Not Loaded</MenuItem>\r\n                            <MenuItem value={1}>Loading</MenuItem>\r\n                            <MenuItem value={2}>Loaded</MenuItem>\r\n                        </Select >\r\n                </FormControl>\r\n            }\r\n            // subheader=\"September 14, 2016\"\r\n            />\r\n            <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                    {trunk.name}\r\n                    </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Link className={classes.floatRight} to={\"/\" + trunk.key}>Edit Items</Link>\r\n                {/* <Button\r\n                  className={clsx(classes.expand, {\r\n                    [classes.expandOpen]: this.state.expanded,\r\n                  })}\r\n                  onClick={this.handleExpandClick}\r\n                  aria-expanded={this.state.expanded}\r\n                  aria-label=\"Show more\"\r\n                  >\r\n                  <ExpandMoreIcon />\r\n                </Button> */}\r\n            </CardActions>\r\n            {/* <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n              <CardContent>\r\n                  <QRCode value={trunk.name} renderAs='svg'/>\r\n              </CardContent>\r\n            </Collapse> */}\r\n        </Card>\r\n    );\r\n  }\r\n}\r\n\r\nTrunkCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  trunk: PropTypes.object,\r\n  key: PropTypes.string,\r\n  alertOpen: PropTypes.bool,\r\n  handleOpenAlert: PropTypes.func,\r\n  handleCloseAlert: PropTypes.func,\r\n  handleRemoveTrunk: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(TrunkCard);"]},"metadata":{},"sourceType":"module"}