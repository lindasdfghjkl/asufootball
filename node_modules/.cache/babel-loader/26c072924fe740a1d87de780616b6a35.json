{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\src\\\\content\\\\HomeContent\\\\HomeContent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport EmptyState from '../../layout/EmptyState/EmptyState';\nimport Button from '@material-ui/core/Button';\nimport AddTrunkDialog from '../../dialogs/AddTrunkDialog/AddTrunkDialog';\nimport TrunksView from '../../layout/TrunksView';\nimport TrunkCard from '../../layout/TrunkCard';\n\nvar styles = function styles(theme) {\n  return {\n    emptyStateIcon: {\n      fontSize: theme.spacing(12)\n    },\n    button: {\n      marginTop: theme.spacing(1)\n    },\n    buttonIcon: {\n      marginRight: theme.spacing(1)\n    },\n    buttonTop: {\n      marginTop: 0\n    }\n  };\n};\n\nvar HomeContent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomeContent, _Component);\n\n  function HomeContent(props) {\n    var _this;\n\n    _classCallCheck(this, HomeContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HomeContent).call(this, props));\n\n    _this.openAddTrunkDialog = function () {\n      console.log(\"add\");\n\n      _this.setState({\n        addTrunkDialog: {\n          open: true,\n          name: ''\n        }\n      });\n    };\n\n    _this.closeAddTrunkDialog = function () {\n      _this.setState({\n        addTrunkDialog: {\n          open: false\n        }\n      });\n    };\n\n    _this.onTrunkAdded = function () {\n      _this.setState({\n        addTrunkDialog: {\n          name: '',\n          open: false\n        }\n      });\n    };\n\n    _this.state = {\n      addTrunkDialog: {\n        open: false,\n        name: ''\n      },\n      trunks: []\n    };\n    _this.trunksRef = _this.getRef().child('trunks').orderByChild('name');\n    return _this;\n  }\n\n  _createClass(HomeContent, [{\n    key: \"getRef\",\n    value: function getRef() {\n      return global.firebaseApp.database().ref();\n    }\n  }, {\n    key: \"listentoDB\",\n    value: function listentoDB(db) {\n      var _this2 = this;\n\n      db.on('value', function (snap) {\n        var list = [];\n        snap.forEach(function (child) {\n          list.push({\n            key: child.key,\n            name: child.val().name,\n            status: child.val().status\n          });\n        });\n\n        if (list.length < 1) {\n          _this2.setState({\n            trunks: []\n          });\n        } else {\n          _this2.setState({\n            trunks: list\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.listentoDB(this.trunksRef);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Styling\n      var classes = this.props.classes; // Properties\n\n      var _this$props = this.props,\n          isSignedIn = _this$props.isSignedIn,\n          title = _this$props.title;\n\n      if (isSignedIn) {\n        if (this.state.trunks.length < 1) {\n          return React.createElement(EmptyState, {\n            description: \"You have no equipment added. Create a trunk to get started.\",\n            button: React.createElement(Fab, {\n              className: classes.button,\n              color: \"secondary\",\n              component: Button,\n              onClick: this.openAddTrunkDialog,\n              variant: \"extended\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132\n              },\n              __self: this\n            }, \"+ New Trunk\"),\n            dialog: React.createElement(AddTrunkDialog, {\n              open: this.state.addTrunkDialog.open,\n              onClose: this.closeAddTrunkDialog,\n              onTrunkAdded: this.onTrunkAdded,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 137\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(TrunksView, {\n            addButton: React.createElement(Fab, {\n              className: classes.buttonTop,\n              color: \"secondary\",\n              component: Button,\n              onClick: this.openAddTrunkDialog,\n              variant: \"extended\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            }, \"+ New Trunk\"),\n            dialog: React.createElement(AddTrunkDialog, {\n              open: this.state.addTrunkDialog.open,\n              onClose: this.closeAddTrunkDialog,\n              onTrunkAdded: this.onTrunkAdded,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 150\n              },\n              __self: this\n            }),\n            cards: this.state.trunks.map(function (trunk, key) {\n              return React.createElement(TrunkCard, {\n                trunk: trunk,\n                key: key,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 154\n                },\n                __self: this\n              });\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          });\n        }\n      } else {\n        return React.createElement(EmptyState, {\n          title: title,\n          description: \"Sign up or sign in to begin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return HomeContent;\n}(Component);\n\nHomeContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  isSignedIn: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired\n};\nexport default withStyles(styles)(HomeContent);","map":{"version":3,"sources":["C:\\Users\\xlind\\Documents\\ASUFootballEquipment\\app\\src\\content\\HomeContent\\HomeContent.js"],"names":["React","Component","PropTypes","withStyles","Fab","EmptyState","Button","AddTrunkDialog","TrunksView","TrunkCard","styles","theme","emptyStateIcon","fontSize","spacing","button","marginTop","buttonIcon","marginRight","buttonTop","HomeContent","props","openAddTrunkDialog","console","log","setState","addTrunkDialog","open","name","closeAddTrunkDialog","onTrunkAdded","state","trunks","trunksRef","getRef","child","orderByChild","global","firebaseApp","database","ref","db","on","snap","list","forEach","push","key","val","status","length","listentoDB","classes","isSignedIn","title","map","trunk","propTypes","object","isRequired","bool","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport EmptyState from '../../layout/EmptyState/EmptyState';\r\nimport Button from '@material-ui/core/Button';\r\n \r\nimport AddTrunkDialog from '../../dialogs/AddTrunkDialog/AddTrunkDialog';\r\nimport TrunksView from '../../layout/TrunksView';\r\nimport TrunkCard from '../../layout/TrunkCard';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = (theme) => ({\r\n  emptyStateIcon: {\r\n    fontSize: theme.spacing(12)\r\n  },\r\n\r\n  button: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n\r\n  buttonTop: {\r\n    marginTop: 0\r\n  },\r\n});\r\n\r\n\r\n\r\nclass HomeContent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      addTrunkDialog: {\r\n        open: false,\r\n        name: '',\r\n      },\r\n      trunks: []\r\n    };\r\n\r\n    this.trunksRef = this.getRef().child('trunks').orderByChild('name');\r\n  }\r\n\r\n  getRef() {\r\n    return global.firebaseApp.database().ref();\r\n  }\r\n\r\n\r\n  openAddTrunkDialog = () => {\r\n    console.log(\"add\")\r\n    this.setState({\r\n      addTrunkDialog: {\r\n        open: true,\r\n        name: ''\r\n      }\r\n    });\r\n  };\r\n\r\n  closeAddTrunkDialog = () => {\r\n    this.setState({\r\n      addTrunkDialog: {\r\n        open: false\r\n      }\r\n    });\r\n  };\r\n\r\n  onTrunkAdded = () => {  \r\n    this.setState({ addTrunkDialog: {name: '', open: false}});\r\n  }\r\n\r\n  \r\n  listentoDB(db) {\r\n    db.on('value', (snap) => {\r\n      var list = [];\r\n\r\n      snap.forEach((child) => {\r\n          list.push({\r\n              key: child.key,\r\n              name: child.val().name,\r\n              status: child.val().status,\r\n          });\r\n      });\r\n\r\n      if (list.length < 1) {\r\n        this.setState({\r\n          trunks: []\r\n        });\r\n      } else {\r\n        this.setState({\r\n          trunks: list\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.listentoDB(this.trunksRef);\r\n  }\r\n\r\n\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n\r\n    // Properties\r\n    const { isSignedIn, title} = this.props;\r\n    \r\n\r\n    if (isSignedIn) {\r\n            if (this.state.trunks.length < 1) {\r\n                return (\r\n                      <EmptyState\r\n                        description=\"You have no equipment added. Create a trunk to get started.\"\r\n                        button={\r\n                          <Fab className={classes.button} color=\"secondary\" component={Button}  onClick={this.openAddTrunkDialog} variant=\"extended\">\r\n                            + New Trunk\r\n                          </Fab>\r\n                        }\r\n                        dialog= {\r\n                          <AddTrunkDialog open={this.state.addTrunkDialog.open} onClose={this.closeAddTrunkDialog} onTrunkAdded={this.onTrunkAdded}/>\r\n                        }\r\n                      />\r\n                  )\r\n            } else {\r\n                  return ( \r\n                    <TrunksView \r\n                      addButton={\r\n                        <Fab className={classes.buttonTop} color=\"secondary\" component={Button}  onClick={this.openAddTrunkDialog} variant=\"extended\">\r\n                          + New Trunk\r\n                        </Fab>\r\n                      }\r\n                      dialog={\r\n                        <AddTrunkDialog open={this.state.addTrunkDialog.open} onClose={this.closeAddTrunkDialog} onTrunkAdded={this.onTrunkAdded}/>\r\n                      }\r\n                      cards={\r\n                        this.state.trunks.map((trunk, key) => \r\n                          <TrunkCard trunk={trunk} key={key}/>\r\n                        )\r\n                      }\r\n                    />\r\n                 )\r\n            }\r\n    } else {\r\n          return (\r\n            <EmptyState\r\n              title={title}\r\n              description=\"Sign up or sign in to begin\"\r\n            />\r\n          );\r\n    }\r\n  }\r\n}\r\n\r\nHomeContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  isSignedIn: PropTypes.bool.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(HomeContent);"]},"metadata":{},"sourceType":"module"}