{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\src\\\\dialogs\\\\ConfirmationDialog\\\\ConfirmationDialog.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nvar ConfirmationDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConfirmationDialog, _Component);\n\n  function ConfirmationDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ConfirmationDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ConfirmationDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleKeyPress = function (event) {\n      var key = event.key;\n\n      if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n        return;\n      }\n\n      if (key === 'Enter') {\n        _this.props.onOkClick();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ConfirmationDialog, [{\n    key: \"render\",\n    value: function render() {\n      // Dialog Properties\n      var open = this.props.open; // Custom Properties\n\n      var _this$props = this.props,\n          title = _this$props.title,\n          contentText = _this$props.contentText,\n          cancelText = _this$props.cancelText,\n          okText = _this$props.okText,\n          disableOkButton = _this$props.disableOkButton,\n          highlightOkButton = _this$props.highlightOkButton; // Dialog Events\n\n      var onClose = this.props.onClose; // Custom Events\n\n      var _this$props2 = this.props,\n          onCancelClick = _this$props2.onCancelClick,\n          onOkClick = _this$props2.onOkClick;\n\n      if (!onClose) {\n        return null;\n      }\n\n      return React.createElement(Dialog, {\n        open: open,\n        onClose: onClose,\n        onKeyPress: this.handleKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, title && React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, title), contentText && React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, contentText)), (onCancelClick || onOkClick) && React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, onCancelClick && React.createElement(Button, {\n        color: \"primary\",\n        onClick: onCancelClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, cancelText || 'Cancel'), onOkClick && React.createElement(Button, {\n        color: \"primary\",\n        disabled: disableOkButton,\n        variant: highlightOkButton && 'contained',\n        onClick: onOkClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, okText || 'OK')));\n    }\n  }]);\n\n  return ConfirmationDialog;\n}(Component);\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\nexport default ConfirmationDialog;","map":{"version":3,"sources":["C:\\Users\\xlind\\Documents\\ASUFootballEquipment\\app\\src\\dialogs\\ConfirmationDialog\\ConfirmationDialog.js"],"names":["React","Component","PropTypes","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","ConfirmationDialog","handleKeyPress","event","key","altKey","ctrlKey","metaKey","shiftKey","props","onOkClick","open","title","contentText","cancelText","okText","disableOkButton","highlightOkButton","onClose","onCancelClick","propTypes","bool","isRequired","string","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass ConfirmationDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Dialog Properties\n    const { open } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      cancelText,\n      okText,\n      disableOkButton,\n      highlightOkButton\n    } = this.props;\n\n    // Dialog Events\n    const { onClose } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onOkClick } = this.props;\n\n    if (!onClose) {\n      return null;\n    }\n\n    return (\n      <Dialog open={open} onClose={onClose} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default ConfirmationDialog;"]},"metadata":{},"sourceType":"module"}