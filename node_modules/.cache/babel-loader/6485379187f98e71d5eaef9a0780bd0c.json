{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\src\\\\App\\\\App.js\";\n// React\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"; // validate.js\n\nimport validate from 'validate.js'; // Firebase\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/performance';\nimport 'firebase/database';\nimport readingTime from 'reading-time'; // Material-UI\n\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar'; // Custom\n\nimport colors from '../colors';\nimport settings from '../settings';\nimport constraints from '../constraints';\nimport LaunchScreen from '../layout/LaunchScreen/LaunchScreen';\nimport Bar from '../layout/Bar/Bar';\nimport HomeContent from '../content/HomeContent/HomeContent';\nimport TrunkContent from '../content/TrunkContent';\nimport NotFoundContent from '../content/NotFoundContent/NotFoundContent';\nimport SignUpDialog from '../dialogs/SignUpDialog/SignUpDialog';\nimport SignInDialog from '../dialogs/SignInDialog/SignInDialog';\nimport ResetPasswordDialog from '../dialogs/ResetPasswordDialog/ResetPasswordDialog';\nimport WelcomeDialog from '../dialogs/WelcomeDialog/WelcomeDialog';\nimport SettingsDialog from '../dialogs/SettingsDialog/SettingsDialog';\nimport InputDialog from '../dialogs/InputDialog/InputDialog';\nimport ConfirmationDialog from '../dialogs/ConfirmationDialog/ConfirmationDialog';\nglobal.firebaseApp = firebase.initializeApp(settings.credentials.firebase);\nvar auth = firebase.auth(); // eslint-disable-next-line no-unused-vars\n\nvar performance = firebase.performance();\nauth.useDeviceLanguage();\nvar theme = createMuiTheme({\n  palette: {\n    primary: settings.theme.primaryColor.import,\n    secondary: settings.theme.secondaryColor.import,\n    type: settings.theme.type\n  }\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this._isMounted = false;\n\n    _this.signUp = function (emailAddress, password, passwordConfirmation) {\n      if (_this.state.isSignedIn) {\n        return;\n      }\n\n      if (!emailAddress || !password || !passwordConfirmation) {\n        return;\n      }\n\n      var errors = validate({\n        emailAddress: emailAddress,\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      }, {\n        emailAddress: constraints.emailAddress,\n        password: constraints.password,\n        passwordConfirmation: constraints.passwordConfirmation\n      });\n\n      if (errors) {\n        return;\n      }\n\n      _this.setState({\n        isPerformingAuthAction: true\n      }, function () {\n        auth.createUserWithEmailAndPassword(emailAddress, password).then(function (value) {\n          _this.closeSignUpDialog(function () {\n            _this.openWelcomeDialog();\n          });\n        }).catch(function (reason) {\n          var code = reason.code;\n          var message = reason.message;\n\n          switch (code) {\n            case 'auth/email-already-in-use':\n            case 'auth/invalid-email':\n            case 'auth/operation-not-allowed':\n            case 'auth/weak-password':\n              _this.openSnackbar(message);\n\n              return;\n\n            default:\n              _this.openSnackbar(message);\n\n              return;\n          }\n        }).finally(function () {\n          _this.setState({\n            isPerformingAuthAction: false\n          });\n        });\n      });\n    };\n\n    _this.signIn = function (emailAddress, password) {\n      if (_this.state.isSignedIn) {\n        return;\n      }\n\n      if (!emailAddress || !password) {\n        return;\n      }\n\n      var errors = validate({\n        emailAddress: emailAddress,\n        password: password\n      }, {\n        emailAddress: constraints.emailAddress,\n        password: constraints.password\n      });\n\n      if (errors) {\n        return;\n      }\n\n      _this.setState({\n        isPerformingAuthAction: true\n      }, function () {\n        auth.signInWithEmailAndPassword(emailAddress, password).then(function (value) {\n          _this.closeSignInDialog(function () {\n            var user = value.user;\n            var displayName = user.displayName;\n            var emailAddress = user.email;\n\n            _this.openSnackbar(\"Signed in as \".concat(displayName || emailAddress));\n          });\n        }).catch(function (reason) {\n          var code = reason.code;\n          var message = reason.message;\n\n          switch (code) {\n            case 'auth/invalid-email':\n            case 'auth/user-disabled':\n            case 'auth/user-not-found':\n            case 'auth/wrong-password':\n              _this.openSnackbar(message);\n\n              return;\n\n            default:\n              _this.openSnackbar(message);\n\n              return;\n          }\n        }).finally(function () {\n          _this.setState({\n            isPerformingAuthAction: false\n          });\n        });\n      });\n    };\n\n    _this.signInWithProvider = function (provider) {\n      if (_this.state.isSignedIn) {\n        return;\n      }\n\n      if (!provider) {\n        return;\n      }\n\n      _this.setState({\n        isPerformingAuthAction: true\n      }, function () {\n        auth.signInWithPopup(provider).then(function (value) {\n          _this.closeSignUpDialog(function () {\n            _this.closeSignInDialog(function () {\n              var user = value.user;\n              var displayName = user.displayName;\n              var emailAddress = user.email;\n\n              _this.openSnackbar(\"Signed in as \".concat(displayName || emailAddress));\n            });\n          });\n        }).catch(function (reason) {\n          var code = reason.code;\n          var message = reason.message;\n\n          switch (code) {\n            case 'auth/account-exists-with-different-credential':\n            case 'auth/auth-domain-config-required':\n            case 'auth/cancelled-popup-request':\n            case 'auth/operation-not-allowed':\n            case 'auth/operation-not-supported-in-this-environment':\n            case 'auth/popup-blocked':\n            case 'auth/popup-closed-by-user':\n            case 'auth/unauthorized-domain':\n              _this.openSnackbar(message);\n\n              return;\n\n            default:\n              _this.openSnackbar(message);\n\n              return;\n          }\n        }).finally(function () {\n          _this.setState({\n            isPerformingAuthAction: false\n          });\n        });\n      });\n    };\n\n    _this.resetPassword = function (emailAddress) {\n      if (_this.state.isSignedIn) {\n        return;\n      }\n\n      if (!emailAddress) {\n        return;\n      }\n\n      var errors = validate({\n        emailAddress: emailAddress\n      }, {\n        emailAddress: constraints.emailAddress\n      });\n\n      if (errors) {\n        return;\n      }\n\n      _this.setState({\n        isPerformingAuthAction: true\n      }, function () {\n        auth.sendPasswordResetEmail(emailAddress).then(function () {\n          _this.closeResetPasswordDialog(function () {\n            _this.openSnackbar(\"Password reset e-mail sent to \".concat(emailAddress));\n          });\n        }).catch(function (reason) {\n          var code = reason.code;\n          var message = reason.message;\n\n          switch (code) {\n            case 'auth/invalid-email':\n            case 'auth/missing-android-pkg-name':\n            case 'auth/missing-continue-uri':\n            case 'auth/missing-ios-bundle-id':\n            case 'auth/invalid-continue-uri':\n            case 'auth/unauthorized-continue-uri':\n            case 'auth/user-not-found':\n              _this.openSnackbar(message);\n\n              return;\n\n            default:\n              _this.openSnackbar(message);\n\n              return;\n          }\n        }).finally(function () {\n          _this.setState({\n            isPerformingAuthAction: false\n          });\n        });\n      });\n    };\n\n    _this.addAvatar = function () {\n      var _this$state = _this.state,\n          user = _this$state.user,\n          isSignedIn = _this$state.isSignedIn,\n          avatar = _this$state.avatar;\n\n      if (!user || !isSignedIn || !avatar) {\n        return;\n      }\n\n      if (user.photoURL) {\n        return;\n      }\n\n      var errors = validate({\n        avatar: avatar\n      }, {\n        avatar: constraints.avatar\n      });\n\n      if (errors) {\n        _this.setState(function (state) {\n          return {\n            addAvatarDialog: _objectSpread({}, state.addAvatarDialog, {\n              errors: errors\n            })\n          };\n        });\n\n        return;\n      }\n\n      _this.setState({\n        isPerformingAuthAction: true\n      }, function () {\n        user.updateProfile({\n          photoURL: avatar\n        }).then(function () {\n          _this.closeAddAvatarDialog(function () {\n            _this.openSnackbar('Avatar added');\n          });\n        }).catch(function (reason) {\n          var code = reason.code;\n          var message = reason.message;\n\n          switch (code) {\n            default:\n              _this.openSnackbar(message);\n\n              return;\n          }\n        }).finally(function () {\n          _this.setState({\n            isPerformingAuthAction: false\n          });\n        });\n      });\n    };\n\n    _this.changeAvatar = function () {\n      var _this$state2 = _this.state,\n          user = _this$state2.user,\n          isSignedIn = _this$state2.isSignedIn,\n          avatar = _this$state2.avatar;\n\n      if (!user || !isSignedIn || !avatar) {\n        return;\n      }\n\n      var errors = validate({\n        avatar: avatar\n      }, {\n        avatar: constraints.avatar\n      });\n\n      if (errors) {\n        _this.setState(function (state) {\n          return {\n            changeAvatarDialog: _objectSpread({}, state.changeAvatarDialog, {\n              errors: errors\n            })\n          };\n        });\n\n        return;\n      }\n\n      if (user.photoURL === avatar) {\n        _this.openSnackbar('Avatar already being used');\n\n        return;\n      }\n\n      _this.setState({\n        isPerformingAuthAction: true\n      }, function () {\n        user.updateProfile({\n          photoURL: avatar\n        }).then(function () {\n          _this.closeChangeAvatarDialog(function () {\n            _this.openSnackbar('Avatar changed');\n          });\n        }).catch(function (reason) {\n          var code = reason.code;\n          var message = reason.message;\n\n          switch (code) {\n            default:\n              _this.openSnackbar(message);\n\n              return;\n          }\n        }).finally(function () {\n          _this.setState({\n            isPerformingAuthAction: false\n          });\n        });\n      });\n    };\n\n    _this.addDisplayName = function () {\n      var _this$state3 = _this.state,\n          user = _this$state3.user,\n          isSignedIn = _this$state3.isSignedIn,\n          displayName = _this$state3.displayName;\n\n      if (!user || !isSignedIn || !displayName) {\n        return;\n      }\n\n      if (user.displayName) {\n        return;\n      }\n\n      var errors = validate({\n        displayName: displayName\n      }, {\n        displayName: constraints.username\n      });\n\n      if (errors) {\n        _this.setState(function (state) {\n          return {\n            addDisplayNameDialog: _objectSpread({}, state.addDisplayNameDialog, {\n              errors: errors\n            })\n          };\n        });\n\n        return;\n      }\n\n      _this.setState({\n        isPerformingAuthAction: true\n      }, function () {\n        user.updateProfile({\n          displayName: displayName\n        }).then(function () {\n          _this.closeAddDisplayNameDialog(function () {\n            _this.openSnackbar('Display name added');\n          });\n        }).catch(function (reason) {\n          var code = reason.code;\n          var message = reason.message;\n\n          switch (code) {\n            default:\n              _this.openSnackbar(message);\n\n              return;\n          }\n        }).finally(function () {\n          _this.setState({\n            isPerformingAuthAction: false\n          });\n        });\n      });\n    };\n\n    _this.changeDisplayName = function () {\n      var _this$state4 = _this.state,\n          user = _this$state4.user,\n          isSignedIn = _this$state4.isSignedIn,\n          displayName = _this$state4.displayName;\n\n      if (!user || !isSignedIn || !displayName) {\n        return;\n      }\n\n      var errors = validate({\n        displayName: displayName\n      }, {\n        displayName: constraints.username\n      });\n\n      if (errors) {\n        _this.setState(function (state) {\n          return {\n            changeDisplayNameDialog: _objectSpread({}, state.changeDisplayNameDialog, {\n              errors: errors\n            })\n          };\n        });\n\n        return;\n      }\n\n      if (displayName === user.displayName) {\n        _this.openSnackbar(\"Display name is already \".concat(displayName));\n\n        return;\n      }\n\n      _this.setState({\n        isPerformingAuthAction: true\n      }, function () {\n        user.updateProfile({\n          displayName: displayName\n        }).then(function () {\n          _this.closeChangeDisplayNameDialog(function () {\n            _this.openSnackbar('Display name changed');\n          });\n        }).catch(function (reason) {\n          var code = reason.code;\n          var message = reason.message;\n\n          switch (code) {\n            default:\n              _this.openSnackbar(message);\n\n              return;\n          }\n        }).finally(function () {\n          _this.setState({\n            isPerformingAuthAction: false\n          });\n        });\n      });\n    };\n\n    _this.addEmailAddress = function () {\n      var _this$state5 = _this.state,\n          user = _this$state5.user,\n          isSignedIn = _this$state5.isSignedIn,\n          emailAddress = _this$state5.emailAddress;\n\n      if (!user || !isSignedIn || !emailAddress) {\n        return;\n      }\n\n      if (user.email) {\n        return;\n      }\n\n      var errors = validate({\n        emailAddress: emailAddress\n      }, {\n        emailAddress: constraints.emailAddress\n      });\n\n      if (errors) {\n        _this.setState(function (state) {\n          return {\n            addEmailAddressDialog: _objectSpread({}, state.addEmailAddressDialog, {\n              errors: errors\n            })\n          };\n        });\n\n        return;\n      }\n\n      _this.setState({\n        isPerformingAuthAction: true\n      }, function () {\n        user.updateEmail(emailAddress).then(function () {\n          _this.closeAddEmailAddressDialog(function () {\n            _this.openSnackbar('E-mail address added');\n          });\n        }).catch(function (reason) {\n          var code = reason.code;\n          var message = reason.message;\n\n          switch (code) {\n            default:\n              _this.openSnackbar(message);\n\n              return;\n          }\n        }).finally(function () {\n          _this.setState({\n            isPerformingAuthAction: false\n          });\n        });\n      });\n    };\n\n    _this.verifyEmailAddress = function (callback) {\n      var _this$state6 = _this.state,\n          user = _this$state6.user,\n          isSignedIn = _this$state6.isSignedIn;\n\n      if (!user || !user.email || !isSignedIn) {\n        return;\n      }\n\n      _this.setState({\n        isPerformingAuthAction: true\n      }, function () {\n        user.sendEmailVerification().then(function () {\n          _this.setState({\n            isVerifyingEmailAddress: true\n          }, function () {\n            var emailAddress = user.email;\n\n            _this.openSnackbar(\"Verification e-mail sent to \".concat(emailAddress));\n\n            if (callback && typeof callback === 'function') {\n              callback();\n            }\n          });\n        }).catch(function (reason) {\n          var code = reason.code;\n          var message = reason.message;\n\n          switch (code) {\n            case 'auth/missing-android-pkg-name':\n            case 'auth/missing-continue-uri':\n            case 'auth/missing-ios-bundle-id':\n            case 'auth/invalid-continue-uri':\n            case 'auth/unauthorized-continue-uri':\n              _this.openSnackbar(message);\n\n              return;\n\n            default:\n              _this.openSnackbar(message);\n\n              return;\n          }\n        }).finally(function () {\n          _this.setState({\n            isPerformingAuthAction: false\n          });\n        });\n      });\n    };\n\n    _this.signOut = function () {\n      if (!_this.state.isSignedIn) {\n        return;\n      }\n\n      _this.setState({\n        isPerformingAuthAction: true\n      }, function () {\n        auth.signOut().then(function () {\n          _this.closeSignOutDialog(function () {\n            _this.openSnackbar('Signed out');\n          });\n        }).catch(function (reason) {\n          var code = reason.code;\n          var message = reason.message;\n\n          switch (code) {\n            default:\n              _this.openSnackbar(message);\n\n              return;\n          }\n        }).finally(function () {\n          _this.setState({\n            isPerformingAuthAction: false\n          });\n        });\n      });\n    };\n\n    _this.updateTheme = function (palette, removeLocalStorage, callback) {\n      var _this$state7 = _this.state,\n          primaryColor = _this$state7.primaryColor,\n          secondaryColor = _this$state7.secondaryColor,\n          type = _this$state7.type;\n\n      if (!palette.primaryColor) {\n        palette.primaryColor = primaryColor;\n      }\n\n      if (!palette.secondaryColor) {\n        palette.secondaryColor = secondaryColor;\n      }\n\n      if (!palette.type) {\n        palette.type = type;\n      }\n\n      theme = createMuiTheme({\n        palette: {\n          primary: colors.find(function (color) {\n            return color.id === palette.primaryColor;\n          }).import,\n          secondary: colors.find(function (color) {\n            return color.id === palette.secondaryColor;\n          }).import,\n          type: palette.type\n        }\n      });\n\n      _this.setState({\n        primaryColor: palette.primaryColor,\n        secondaryColor: palette.secondaryColor,\n        type: palette.type\n      }, function () {\n        if (removeLocalStorage) {\n          localStorage.removeItem('theme');\n        } else {\n          localStorage.setItem('theme', JSON.stringify({\n            primaryColor: palette.primaryColor,\n            secondaryColor: palette.secondaryColor,\n            type: palette.type\n          }));\n        }\n\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.resetTheme = function () {\n      _this.updateTheme({\n        primaryColor: settings.theme.primaryColor.name,\n        secondaryColor: settings.theme.secondaryColor.name,\n        type: settings.theme.type\n      }, true, function () {\n        _this.openSnackbar('Settings reset');\n      });\n    };\n\n    _this.changePrimaryColor = function (event) {\n      var primaryColor = event.target.value;\n\n      _this.updateTheme({\n        primaryColor: primaryColor\n      });\n    };\n\n    _this.changeSecondaryColor = function (event) {\n      var secondaryColor = event.target.value;\n\n      _this.updateTheme({\n        secondaryColor: secondaryColor\n      });\n    };\n\n    _this.changeType = function (event) {\n      var type = event.target.value;\n\n      _this.updateTheme({\n        type: type\n      });\n    };\n\n    _this.openSignUpDialog = function () {\n      _this.setState({\n        signUpDialog: {\n          open: true\n        }\n      });\n    };\n\n    _this.closeSignUpDialog = function (callback) {\n      _this.setState({\n        signUpDialog: {\n          open: false\n        }\n      }, function () {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.openSignInDialog = function () {\n      _this.setState({\n        signInDialog: {\n          open: true\n        }\n      });\n    };\n\n    _this.closeSignInDialog = function (callback) {\n      _this.setState({\n        signInDialog: {\n          open: false\n        }\n      }, function () {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.openResetPasswordDialog = function () {\n      _this.setState({\n        resetPasswordDialog: {\n          open: true\n        }\n      });\n    };\n\n    _this.closeResetPasswordDialog = function (callback) {\n      _this.setState({\n        resetPasswordDialog: {\n          open: false\n        }\n      }, function () {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.openWelcomeDialog = function () {\n      _this.setState({\n        welcomeDialog: {\n          open: true\n        }\n      });\n    };\n\n    _this.closeWelcomeDialog = function (callback) {\n      _this.setState({\n        welcomeDialog: {\n          open: false\n        }\n      }, function () {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.openSettingsDialog = function () {\n      _this.setState({\n        settingsDialog: {\n          open: true\n        }\n      });\n    };\n\n    _this.closeSettingsDialog = function (callback) {\n      _this.setState({\n        settingsDialog: {\n          open: false\n        }\n      }, function () {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.openAddAvatarDialog = function () {\n      _this.setState({\n        addAvatarDialog: {\n          open: true\n        }\n      });\n    };\n\n    _this.closeAddAvatarDialog = function (callback) {\n      _this.setState({\n        addAvatarDialog: {\n          open: false\n        }\n      }, function () {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.openChangeAvatarDialog = function () {\n      _this.setState({\n        changeAvatarDialog: {\n          open: true\n        }\n      });\n    };\n\n    _this.closeChangeAvatarDialog = function (callback) {\n      _this.setState({\n        changeAvatarDialog: {\n          open: false\n        }\n      }, function () {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.openAddDisplayNameDialog = function () {\n      _this.setState({\n        addDisplayNameDialog: {\n          open: true\n        }\n      });\n    };\n\n    _this.closeAddDisplayNameDialog = function (callback) {\n      _this.setState({\n        addDisplayNameDialog: {\n          open: false\n        }\n      }, function () {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.openChangeDisplayNameDialog = function () {\n      _this.setState({\n        changeDisplayNameDialog: {\n          open: true\n        }\n      });\n    };\n\n    _this.closeChangeDisplayNameDialog = function (callback) {\n      _this.setState({\n        changeDisplayNameDialog: {\n          open: false\n        }\n      }, function () {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.openAddEmailAddressDialog = function () {\n      _this.setState({\n        addEmailAddressDialog: {\n          open: true\n        }\n      });\n    };\n\n    _this.closeAddEmailAddressDialog = function (callback) {\n      _this.setState({\n        addEmailAddressDialog: {\n          open: false\n        }\n      }, function () {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.openSignOutDialog = function () {\n      _this.setState({\n        signOutDialog: {\n          open: true\n        }\n      });\n    };\n\n    _this.closeSignOutDialog = function (callback) {\n      _this.setState({\n        signOutDialog: {\n          open: false\n        }\n      }, function () {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.handleAvatarChange = function (event) {\n      var avatar = event.target.value;\n\n      _this.setState({\n        avatar: avatar\n      });\n    };\n\n    _this.handleDisplayNameChange = function (event) {\n      var displayName = event.target.value;\n\n      _this.setState({\n        displayName: displayName\n      });\n    };\n\n    _this.handleEmailAddressChange = function (event) {\n      var emailAddress = event.target.value;\n\n      _this.setState({\n        emailAddress: emailAddress\n      });\n    };\n\n    _this.openSnackbar = function (message) {\n      _this.setState({\n        snackbar: {\n          autoHideDuration: readingTime(message).time * 2,\n          message: message,\n          open: true\n        }\n      });\n    };\n\n    _this.closeSnackbar = function () {\n      var clearMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var snackbar = _this.state.snackbar;\n\n      _this.setState({\n        snackbar: {\n          message: clearMessage ? '' : snackbar.message,\n          open: false\n        }\n      });\n    };\n\n    _this.state = {\n      primaryColor: settings.theme.primaryColor.name,\n      secondaryColor: settings.theme.secondaryColor.name,\n      type: settings.theme.type,\n      isAuthReady: false,\n      isPerformingAuthAction: false,\n      isVerifyingEmailAddress: false,\n      isSignedIn: false,\n      user: null,\n      avatar: '',\n      displayName: '',\n      emailAddress: '',\n      signUpDialog: {\n        open: false\n      },\n      signInDialog: {\n        open: false\n      },\n      resetPasswordDialog: {\n        open: false\n      },\n      welcomeDialog: {\n        open: false\n      },\n      settingsDialog: {\n        open: false\n      },\n      addAvatarDialog: {\n        open: false,\n        errors: null\n      },\n      changeAvatarDialog: {\n        open: false,\n        errors: null\n      },\n      addDisplayNameDialog: {\n        open: false,\n        errors: null\n      },\n      changeDisplayNameDialog: {\n        open: false,\n        errors: null\n      },\n      addEmailAddressDialog: {\n        open: false,\n        errors: null\n      },\n      signOutDialog: {\n        open: false\n      },\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      },\n      trunks: []\n    };\n    _this.trunksRef = _this.getRef().child('trunks').orderByChild('name');\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getRef\",\n    value: function getRef() {\n      return global.firebaseApp.database().ref();\n    }\n  }, {\n    key: \"listentoDB\",\n    value: function listentoDB(db) {\n      var _this2 = this;\n\n      db.on('value', function (snap) {\n        var list = [];\n        snap.forEach(function (child) {\n          list.push({\n            key: child.key,\n            name: child.val().name,\n            status: child.val().status\n          });\n        });\n\n        if (list.length < 1) {\n          _this2.setState({\n            trunks: []\n          });\n        } else {\n          _this2.setState({\n            trunks: list\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state8 = this.state,\n          primaryColor = _this$state8.primaryColor,\n          secondaryColor = _this$state8.secondaryColor,\n          type = _this$state8.type,\n          isAuthReady = _this$state8.isAuthReady,\n          isPerformingAuthAction = _this$state8.isPerformingAuthAction,\n          isVerifyingEmailAddress = _this$state8.isVerifyingEmailAddress,\n          isSignedIn = _this$state8.isSignedIn,\n          user = _this$state8.user,\n          avatar = _this$state8.avatar,\n          displayName = _this$state8.displayName,\n          emailAddress = _this$state8.emailAddress;\n      var _this$state9 = this.state,\n          signUpDialog = _this$state9.signUpDialog,\n          signInDialog = _this$state9.signInDialog,\n          resetPasswordDialog = _this$state9.resetPasswordDialog,\n          welcomeDialog = _this$state9.welcomeDialog,\n          settingsDialog = _this$state9.settingsDialog,\n          addAvatarDialog = _this$state9.addAvatarDialog,\n          changeAvatarDialog = _this$state9.changeAvatarDialog,\n          addDisplayNameDialog = _this$state9.addDisplayNameDialog,\n          changeDisplayNameDialog = _this$state9.changeDisplayNameDialog,\n          addEmailAddressDialog = _this$state9.addEmailAddressDialog,\n          signOutDialog = _this$state9.signOutDialog;\n      var snackbar = this.state.snackbar;\n      var routeComponents = this.state.trunks.map(function (trunk, key) {\n        return React.createElement(Route, {\n          key: key,\n          path: \"/\" + trunk.key,\n          render: function render() {\n            return React.createElement(TrunkContent, {\n              isSignedIn: isSignedIn,\n              trunk: trunk,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1102\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1102\n          },\n          __self: this\n        });\n      });\n      console.log(routeComponents);\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          minHeight: '100vh',\n          backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107\n        },\n        __self: this\n      }, !isAuthReady && React.createElement(LaunchScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109\n        },\n        __self: this\n      }), isAuthReady && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        title: settings.title,\n        isSignedIn: isSignedIn,\n        isPerformingAuthAction: isPerformingAuthAction,\n        user: user,\n        onSignUpClick: this.openSignUpDialog,\n        onSignInClick: this.openSignInDialog,\n        onSettingsClick: this.openSettingsDialog,\n        onSignOutClick: this.openSignOutDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1129\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        render: function render() {\n          return React.createElement(HomeContent, {\n            isSignedIn: isSignedIn,\n            title: settings.title,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1130\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130\n        },\n        __self: this\n      }), routeComponents, React.createElement(Route, {\n        component: NotFoundContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132\n        },\n        __self: this\n      }), \")\", React.createElement(Route, {\n        path: \"/\",\n        render: function render() {\n          return React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1135\n            },\n            __self: this\n          }, \"hello\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135\n        },\n        __self: this\n      })), isSignedIn && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140\n        },\n        __self: this\n      }, React.createElement(Hidden, {\n        only: \"xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1141\n        },\n        __self: this\n      }, React.createElement(WelcomeDialog, {\n        open: welcomeDialog.open,\n        title: settings.title,\n        user: user,\n        isPerformingAuthAction: isPerformingAuthAction,\n        onClose: this.closeWelcomeDialog,\n        onCancelClick: this.closeWelcomeDialog,\n        onVerifyClick: function onVerifyClick() {\n          _this3.verifyEmailAddress(function () {\n            _this3.closeWelcomeDialog();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142\n        },\n        __self: this\n      }), React.createElement(SettingsDialog, {\n        open: settingsDialog.open,\n        user: user,\n        isPerformingAuthAction: isPerformingAuthAction,\n        isVerifyingEmailAddress: isVerifyingEmailAddress,\n        colors: colors,\n        primaryColor: primaryColor,\n        secondaryColor: secondaryColor,\n        type: type,\n        defaultTheme: settings.theme,\n        onClose: this.closeSettingsDialog,\n        onAddAvatarClick: this.openAddAvatarDialog,\n        onChangeAvatarClick: this.openChangeAvatarDialog,\n        onAddDisplayNameClick: this.openAddDisplayNameDialog,\n        onChangeDisplayNameClick: this.openChangeDisplayNameDialog,\n        onAddEmailAddressClick: this.openAddEmailAddressDialog,\n        onVerifyEmailAddressClick: this.verifyEmailAddress,\n        onPrimaryColorChange: this.changePrimaryColor,\n        onSecondaryColorChange: this.changeSecondaryColor,\n        onTypeChange: this.changeType,\n        onResetClick: this.resetTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1159\n        },\n        __self: this\n      }), React.createElement(InputDialog, {\n        open: addAvatarDialog.open,\n        title: \"Add avatar\",\n        contentText: \"Your avatar is used to represent you. It's visible to other users and can be changed any time.\",\n        textField: React.createElement(TextField, {\n          autoComplete: \"photo\",\n          autoFocus: true,\n          error: !!(addAvatarDialog.errors && addAvatarDialog.errors.avatar),\n          fullWidth: true,\n          helperText: addAvatarDialog.errors && addAvatarDialog.errors.avatar ? addAvatarDialog.errors.avatar[0] : '',\n          margin: \"normal\",\n          onChange: this.handleAvatarChange,\n          placeholder: \"Avatar URL\",\n          required: true,\n          type: \"url\",\n          value: avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1190\n          },\n          __self: this\n        }),\n        okText: \"Add\",\n        disableOkButton: !avatar || isPerformingAuthAction,\n        highlightOkButton: true,\n        onClose: this.closeAddAvatarDialog,\n        onExited: function onExited() {\n          _this3.setState({\n            avatar: ''\n          });\n        },\n        onCancelClick: this.closeAddAvatarDialog,\n        onOkClick: this.addAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184\n        },\n        __self: this\n      }), React.createElement(InputDialog, {\n        open: changeAvatarDialog.open,\n        title: \"Change avatar\",\n        contentText: \"Your avatar is used to represent you. It's visible to other users and can be changed any time.\",\n        textField: React.createElement(TextField, {\n          autoComplete: \"photo\",\n          autoFocus: true,\n          error: !!(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar),\n          fullWidth: true,\n          helperText: changeAvatarDialog.errors && changeAvatarDialog.errors.avatar ? changeAvatarDialog.errors.avatar[0] : '',\n          margin: \"normal\",\n          onChange: this.handleAvatarChange,\n          placeholder: user.photoURL,\n          required: true,\n          type: \"url\",\n          value: avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1225\n          },\n          __self: this\n        }),\n        okText: \"Change\",\n        disableOkButton: !avatar || isPerformingAuthAction,\n        highlightOkButton: true,\n        onClose: this.closeChangeAvatarDialog,\n        onExited: function onExited() {\n          _this3.setState({\n            avatar: ''\n          });\n        },\n        onCancelClick: this.closeChangeAvatarDialog,\n        onOkClick: this.changeAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1219\n        },\n        __self: this\n      }), React.createElement(InputDialog, {\n        open: addDisplayNameDialog.open,\n        title: \"Add display name\",\n        contentText: \"Your display name is used to represent you. It's visible to other users and can be changed any time.\",\n        textField: React.createElement(TextField, {\n          autoComplete: \"name\",\n          autoFocus: true,\n          error: !!(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName),\n          fullWidth: true,\n          helperText: addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName ? addDisplayNameDialog.errors.displayName[0] : '',\n          margin: \"normal\",\n          onChange: this.handleDisplayNameChange,\n          placeholder: \"Display name\",\n          required: true,\n          type: \"text\",\n          value: displayName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1260\n          },\n          __self: this\n        }),\n        okText: \"Add\",\n        disableOkButton: !displayName || isPerformingAuthAction,\n        highlightOkButton: true,\n        onClose: this.closeAddDisplayNameDialog,\n        onExited: function onExited() {\n          _this3.setState({\n            displayName: ''\n          });\n        },\n        onCancelClick: this.closeAddDisplayNameDialog,\n        onOkClick: this.addDisplayName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1254\n        },\n        __self: this\n      }), React.createElement(InputDialog, {\n        open: changeDisplayNameDialog.open,\n        title: \"Change display name\",\n        contentText: \"Your display name is used to represent you. It's visible to other users and can be changed any time.\",\n        textField: React.createElement(TextField, {\n          autoComplete: \"name\",\n          autoFocus: true,\n          error: !!(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName),\n          fullWidth: true,\n          helperText: changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName ? changeDisplayNameDialog.errors.displayName[0] : '',\n          margin: \"normal\",\n          onChange: this.handleDisplayNameChange,\n          placeholder: user.displayName,\n          required: true,\n          type: \"text\",\n          value: displayName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1295\n          },\n          __self: this\n        }),\n        okText: \"Change\",\n        disableOkButton: !displayName || isPerformingAuthAction,\n        highlightOkButton: true,\n        onClose: this.closeChangeDisplayNameDialog,\n        onExited: function onExited() {\n          _this3.setState({\n            displayName: ''\n          });\n        },\n        onCancelClick: this.closeChangeDisplayNameDialog,\n        onOkClick: this.changeDisplayName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1289\n        },\n        __self: this\n      }), React.createElement(InputDialog, {\n        open: addEmailAddressDialog.open,\n        title: \"Add e-mail address\",\n        contentText: \"Your e-mail address is used to identify you. It's not visible to other users and can be changed any time.\",\n        textField: React.createElement(TextField, {\n          autoComplete: \"email\",\n          autoFocus: true,\n          error: !!(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress),\n          fullWidth: true,\n          helperText: addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress ? addEmailAddressDialog.errors.emailAddress[0] : '',\n          margin: \"normal\",\n          onChange: this.handleEmailAddressChange,\n          placeholder: \"E-mail address\",\n          required: true,\n          type: \"email\",\n          value: emailAddress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1330\n          },\n          __self: this\n        }),\n        okText: \"Add\",\n        disableOkButton: !emailAddress || isPerformingAuthAction,\n        highlightOkButton: true,\n        onClose: this.closeAddEmailAddressDialog,\n        onExited: function onExited() {\n          _this3.setState({\n            emailAddress: ''\n          });\n        },\n        onCancelClick: this.closeAddEmailAddressDialog,\n        onOkClick: this.addEmailAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324\n        },\n        __self: this\n      })), React.createElement(Hidden, {\n        only: ['sm', 'md', 'lg', 'xl'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1360\n        },\n        __self: this\n      }, React.createElement(WelcomeDialog, {\n        fullScreen: true,\n        open: welcomeDialog.open,\n        title: settings.title,\n        user: user,\n        isPerformingAuthAction: isPerformingAuthAction,\n        onClose: this.closeWelcomeDialog,\n        onCancelClick: this.closeWelcomeDialog,\n        onVerifyClick: function onVerifyClick() {\n          _this3.verifyEmailAddress(function () {\n            _this3.closeWelcomeDialog();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1361\n        },\n        __self: this\n      }), React.createElement(SettingsDialog, {\n        fullScreen: true,\n        open: settingsDialog.open,\n        user: user,\n        isPerformingAuthAction: isPerformingAuthAction,\n        isVerifyingEmailAddress: isVerifyingEmailAddress,\n        colors: colors,\n        primaryColor: primaryColor,\n        secondaryColor: secondaryColor,\n        type: type,\n        defaultTheme: settings.theme,\n        onClose: this.closeSettingsDialog,\n        onAddAvatarClick: this.openAddAvatarDialog,\n        onChangeAvatarClick: this.openChangeAvatarDialog,\n        onAddDisplayNameClick: this.openAddDisplayNameDialog,\n        onChangeDisplayNameClick: this.openChangeDisplayNameDialog,\n        onAddEmailAddressClick: this.openAddEmailAddressDialog,\n        onVerifyEmailAddressClick: this.verifyEmailAddress,\n        onPrimaryColorChange: this.changePrimaryColor,\n        onSecondaryColorChange: this.changeSecondaryColor,\n        onTypeChange: this.changeType,\n        onResetClick: this.resetTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1379\n        },\n        __self: this\n      }), React.createElement(InputDialog, {\n        fullScreen: true,\n        open: addAvatarDialog.open,\n        title: \"Add avatar\",\n        contentText: \"Your avatar is used to represent you. It's visible to other users and can be changed any time.\",\n        textField: React.createElement(TextField, {\n          autoComplete: \"photo\",\n          autoFocus: true,\n          error: !!(addAvatarDialog.errors && addAvatarDialog.errors.avatar),\n          fullWidth: true,\n          helperText: addAvatarDialog.errors && addAvatarDialog.errors.avatar ? addAvatarDialog.errors.avatar[0] : '',\n          margin: \"normal\",\n          onChange: this.handleAvatarChange,\n          placeholder: \"Avatar URL\",\n          required: true,\n          type: \"url\",\n          value: avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1412\n          },\n          __self: this\n        }),\n        okText: \"Add\",\n        disableOkButton: !avatar || isPerformingAuthAction,\n        highlightOkButton: true,\n        onClose: this.closeAddAvatarDialog,\n        onExited: function onExited() {\n          _this3.setState({\n            avatar: ''\n          });\n        },\n        onCancelClick: this.closeAddAvatarDialog,\n        onOkClick: this.addAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1405\n        },\n        __self: this\n      }), React.createElement(InputDialog, {\n        fullScreen: true,\n        open: changeAvatarDialog.open,\n        title: \"Change avatar\",\n        contentText: \"Your avatar is used to represent you. It's visible to other users and can be changed any time.\",\n        textField: React.createElement(TextField, {\n          autoComplete: \"photo\",\n          autoFocus: true,\n          error: !!(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar),\n          fullWidth: true,\n          helperText: changeAvatarDialog.errors && changeAvatarDialog.errors.avatar ? changeAvatarDialog.errors.avatar[0] : '',\n          margin: \"normal\",\n          onChange: this.handleAvatarChange,\n          placeholder: user.photoURL,\n          required: true,\n          type: \"url\",\n          value: avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1448\n          },\n          __self: this\n        }),\n        okText: \"Change\",\n        disableOkButton: !avatar || isPerformingAuthAction,\n        highlightOkButton: true,\n        onClose: this.closeChangeAvatarDialog,\n        onExited: function onExited() {\n          _this3.setState({\n            avatar: ''\n          });\n        },\n        onCancelClick: this.closeChangeAvatarDialog,\n        onOkClick: this.changeAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1441\n        },\n        __self: this\n      }), React.createElement(InputDialog, {\n        fullScreen: true,\n        open: addDisplayNameDialog.open,\n        title: \"Add display name\",\n        contentText: \"Your display name is used to represent you. It's visible to other users and can be changed any time.\",\n        textField: React.createElement(TextField, {\n          autoComplete: \"name\",\n          autoFocus: true,\n          error: !!(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName),\n          fullWidth: true,\n          helperText: addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName ? addDisplayNameDialog.errors.displayName[0] : '',\n          margin: \"normal\",\n          onChange: this.handleDisplayNameChange,\n          placeholder: \"Display name\",\n          required: true,\n          type: \"text\",\n          value: displayName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1484\n          },\n          __self: this\n        }),\n        okText: \"Add\",\n        disableOkButton: !displayName || isPerformingAuthAction,\n        highlightOkButton: true,\n        onClose: this.closeAddDisplayNameDialog,\n        onExited: function onExited() {\n          _this3.setState({\n            displayName: ''\n          });\n        },\n        onCancelClick: this.closeAddDisplayNameDialog,\n        onOkClick: this.addDisplayName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1477\n        },\n        __self: this\n      }), React.createElement(InputDialog, {\n        fullScreen: true,\n        open: changeDisplayNameDialog.open,\n        title: \"Change display name\",\n        contentText: \"Your display name is used to represent you. It's visible to other users and can be changed any time.\",\n        textField: React.createElement(TextField, {\n          autoComplete: \"name\",\n          autoFocus: true,\n          error: !!(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName),\n          fullWidth: true,\n          helperText: changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName ? changeDisplayNameDialog.errors.displayName[0] : '',\n          margin: \"normal\",\n          onChange: this.handleDisplayNameChange,\n          placeholder: user.displayName,\n          required: true,\n          type: \"text\",\n          value: displayName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1520\n          },\n          __self: this\n        }),\n        okText: \"Change\",\n        disableOkButton: !displayName || isPerformingAuthAction,\n        highlightOkButton: true,\n        onClose: this.closeChangeDisplayNameDialog,\n        onExited: function onExited() {\n          _this3.setState({\n            displayName: ''\n          });\n        },\n        onCancelClick: this.closeChangeDisplayNameDialog,\n        onOkClick: this.changeDisplayName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1513\n        },\n        __self: this\n      }), React.createElement(InputDialog, {\n        fullScreen: true,\n        open: addEmailAddressDialog.open,\n        title: \"Add e-mail address\",\n        contentText: \"Your e-mail address is used to identify you. It's not visible to other users and can be changed any time.\",\n        textField: React.createElement(TextField, {\n          autoComplete: \"email\",\n          autoFocus: true,\n          error: !!(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress),\n          fullWidth: true,\n          helperText: addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress ? addEmailAddressDialog.errors.emailAddress[0] : '',\n          margin: \"normal\",\n          onChange: this.handleEmailAddressChange,\n          placeholder: \"E-mail address\",\n          required: true,\n          type: \"email\",\n          value: emailAddress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1556\n          },\n          __self: this\n        }),\n        okText: \"Add\",\n        disableOkButton: !emailAddress || isPerformingAuthAction,\n        highlightOkButton: true,\n        onClose: this.closeAddEmailAddressDialog,\n        onExited: function onExited() {\n          _this3.setState({\n            emailAddress: ''\n          });\n        },\n        onCancelClick: this.closeAddEmailAddressDialog,\n        onOkClick: this.addEmailAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1549\n        },\n        __self: this\n      })), React.createElement(ConfirmationDialog, {\n        open: signOutDialog.open,\n        title: \"Sign out?\",\n        contentText: \"While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\",\n        okText: \"Sign Out\",\n        disableOkButton: isPerformingAuthAction,\n        highlightOkButton: true,\n        onClose: this.closeSignOutDialog,\n        onCancelClick: this.closeSignOutDialog,\n        onOkClick: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1586\n        },\n        __self: this\n      })), !isSignedIn && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1603\n        },\n        __self: this\n      }, React.createElement(Hidden, {\n        only: \"xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1604\n        },\n        __self: this\n      }, React.createElement(SignUpDialog, {\n        open: signUpDialog.open,\n        isPerformingAuthAction: isPerformingAuthAction,\n        signUp: this.signUp,\n        onClose: this.closeSignUpDialog,\n        onAuthProviderClick: this.signInWithProvider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1605\n        },\n        __self: this\n      }), React.createElement(SignInDialog, {\n        open: signInDialog.open,\n        isPerformingAuthAction: isPerformingAuthAction,\n        signIn: this.signIn,\n        onClose: this.closeSignInDialog,\n        onAuthProviderClick: this.signInWithProvider,\n        onResetPasswordClick: this.openResetPasswordDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1616\n        },\n        __self: this\n      })), React.createElement(Hidden, {\n        only: ['sm', 'md', 'lg', 'xl'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1629\n        },\n        __self: this\n      }, React.createElement(SignUpDialog, {\n        fullScreen: true,\n        open: signUpDialog.open,\n        isPerformingAuthAction: isPerformingAuthAction,\n        signUp: this.signUp,\n        onClose: this.closeSignUpDialog,\n        onAuthProviderClick: this.signInWithProvider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1630\n        },\n        __self: this\n      }), React.createElement(SignInDialog, {\n        fullScreen: true,\n        open: signInDialog.open,\n        isPerformingAuthAction: isPerformingAuthAction,\n        signIn: this.signIn,\n        onClose: this.closeSignInDialog,\n        onAuthProviderClick: this.signInWithProvider,\n        onResetPasswordClick: this.openResetPasswordDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1642\n        },\n        __self: this\n      })), React.createElement(ResetPasswordDialog, {\n        open: resetPasswordDialog.open,\n        isPerformingAuthAction: isPerformingAuthAction,\n        resetPassword: this.resetPassword,\n        onClose: this.closeResetPasswordDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1656\n        },\n        __self: this\n      })), React.createElement(Snackbar, {\n        autoHideDuration: snackbar.autoHideDuration,\n        message: snackbar.message,\n        open: snackbar.open,\n        onClose: this.closeSnackbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1668\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this._isMounted = true;\n      var theme = JSON.parse(localStorage.getItem('theme'));\n\n      if (theme) {\n        this.updateTheme(theme);\n      }\n\n      this.removeAuthObserver = firebase.auth().onAuthStateChanged(function (user) {\n        if (_this4._isMounted) {\n          _this4.setState({\n            isAuthReady: true,\n            isSignedIn: !!user,\n            user: user\n          });\n        }\n      });\n      this.listentoDB(this.trunksRef);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this.removeAuthObserver();\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\xlind\\Documents\\ASUFootballEquipment\\app\\src\\App\\App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","validate","firebase","readingTime","createMuiTheme","MuiThemeProvider","Hidden","TextField","Snackbar","colors","settings","constraints","LaunchScreen","Bar","HomeContent","TrunkContent","NotFoundContent","SignUpDialog","SignInDialog","ResetPasswordDialog","WelcomeDialog","SettingsDialog","InputDialog","ConfirmationDialog","global","firebaseApp","initializeApp","credentials","auth","performance","useDeviceLanguage","theme","palette","primary","primaryColor","import","secondary","secondaryColor","type","App","props","_isMounted","signUp","emailAddress","password","passwordConfirmation","state","isSignedIn","errors","setState","isPerformingAuthAction","createUserWithEmailAndPassword","then","value","closeSignUpDialog","openWelcomeDialog","catch","reason","code","message","openSnackbar","finally","signIn","signInWithEmailAndPassword","closeSignInDialog","user","displayName","email","signInWithProvider","provider","signInWithPopup","resetPassword","sendPasswordResetEmail","closeResetPasswordDialog","addAvatar","avatar","photoURL","addAvatarDialog","updateProfile","closeAddAvatarDialog","changeAvatar","changeAvatarDialog","closeChangeAvatarDialog","addDisplayName","username","addDisplayNameDialog","closeAddDisplayNameDialog","changeDisplayName","changeDisplayNameDialog","closeChangeDisplayNameDialog","addEmailAddress","addEmailAddressDialog","updateEmail","closeAddEmailAddressDialog","verifyEmailAddress","callback","sendEmailVerification","isVerifyingEmailAddress","signOut","closeSignOutDialog","updateTheme","removeLocalStorage","find","color","id","localStorage","removeItem","setItem","JSON","stringify","resetTheme","name","changePrimaryColor","event","target","changeSecondaryColor","changeType","openSignUpDialog","signUpDialog","open","openSignInDialog","signInDialog","openResetPasswordDialog","resetPasswordDialog","welcomeDialog","closeWelcomeDialog","openSettingsDialog","settingsDialog","closeSettingsDialog","openAddAvatarDialog","openChangeAvatarDialog","openAddDisplayNameDialog","openChangeDisplayNameDialog","openAddEmailAddressDialog","openSignOutDialog","signOutDialog","handleAvatarChange","handleDisplayNameChange","handleEmailAddressChange","snackbar","autoHideDuration","time","closeSnackbar","clearMessage","isAuthReady","trunks","trunksRef","getRef","child","orderByChild","database","ref","db","on","snap","list","forEach","push","key","val","status","length","routeComponents","map","trunk","console","log","minHeight","backgroundColor","title","parse","getItem","removeAuthObserver","onAuthStateChanged","listentoDB"],"mappings":"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","sourcesContent":["// React\nimport React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// validate.js\nimport validate from 'validate.js';\n\n// Firebase\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/performance';\nimport 'firebase/database';\n\n\nimport readingTime from 'reading-time';\n\n// Material-UI\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport Hidden from '@material-ui/core/Hidden';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n// Custom\nimport colors from '../colors';\nimport settings from '../settings';\nimport constraints from '../constraints';\n\nimport LaunchScreen from '../layout/LaunchScreen/LaunchScreen';\n\nimport Bar from '../layout/Bar/Bar';\n\nimport HomeContent from '../content/HomeContent/HomeContent';\nimport TrunkContent from '../content/TrunkContent';\nimport NotFoundContent from '../content/NotFoundContent/NotFoundContent';\n\nimport SignUpDialog from '../dialogs/SignUpDialog/SignUpDialog';\nimport SignInDialog from '../dialogs/SignInDialog/SignInDialog';\nimport ResetPasswordDialog from '../dialogs/ResetPasswordDialog/ResetPasswordDialog';\nimport WelcomeDialog from '../dialogs/WelcomeDialog/WelcomeDialog';\nimport SettingsDialog from '../dialogs/SettingsDialog/SettingsDialog';\nimport InputDialog from '../dialogs/InputDialog/InputDialog';\nimport ConfirmationDialog from '../dialogs/ConfirmationDialog/ConfirmationDialog';\n\nglobal.firebaseApp = firebase.initializeApp(settings.credentials.firebase);\n\n\nconst auth = firebase.auth();\n\n// eslint-disable-next-line no-unused-vars\nconst performance = firebase.performance();\n\nauth.useDeviceLanguage();\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: settings.theme.primaryColor.import,\n    secondary: settings.theme.secondaryColor.import,\n    type: settings.theme.type\n  }\n});\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      primaryColor: settings.theme.primaryColor.name,\n      secondaryColor: settings.theme.secondaryColor.name,\n      type: settings.theme.type,\n\n      isAuthReady: false,\n      isPerformingAuthAction: false,\n      isVerifyingEmailAddress: false,\n      isSignedIn: false,\n\n      user: null,\n      avatar: '',\n      displayName: '',\n      emailAddress: '',\n\n      signUpDialog: {\n        open: false\n      },\n\n      signInDialog: {\n        open: false\n      },\n\n      resetPasswordDialog: {\n        open: false\n      },\n\n      welcomeDialog: {\n        open: false\n      },\n\n      settingsDialog: {\n        open: false\n      },\n\n      addAvatarDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      changeAvatarDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      addDisplayNameDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      changeDisplayNameDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      addEmailAddressDialog: {\n        open: false,\n\n        errors: null\n      },\n\n      signOutDialog: {\n        open: false\n      },\n\n      snackbar: {\n        autoHideDuration: 0,\n        message: '',\n        open: false\n      },\n      trunks: []\n    };\n\n    this.trunksRef = this.getRef().child('trunks').orderByChild('name');\n  }\n\n  getRef() {\n    return global.firebaseApp.database().ref();\n  }\n  listentoDB(db) {\n    db.on('value', (snap) => {\n      var list = [];\n\n      snap.forEach((child) => {\n          list.push({\n              key: child.key,\n              name: child.val().name,\n              status: child.val().status,\n          });\n      });\n\n      if (list.length < 1) {\n        this.setState({\n          trunks: []\n        });\n      } else {\n        this.setState({\n          trunks: list\n        });\n      }\n    });\n  }\n\n\n  signUp = (emailAddress, password, passwordConfirmation) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password || !passwordConfirmation) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress: emailAddress,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }, {\n      emailAddress: constraints.emailAddress,\n      password: constraints.password,\n      passwordConfirmation: constraints.passwordConfirmation\n    });\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.openWelcomeDialog();\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/email-already-in-use':\n          case 'auth/invalid-email':\n          case 'auth/operation-not-allowed':\n          case 'auth/weak-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  signIn = (emailAddress, password) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress || !password) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress: emailAddress,\n      password: password,\n    }, {\n      emailAddress: constraints.emailAddress,\n      password: constraints.password\n    });\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\n        this.closeSignInDialog(() => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/user-disabled':\n          case 'auth/user-not-found':\n          case 'auth/wrong-password':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  signInWithProvider = (provider) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!provider) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signInWithPopup(provider).then((value) => {\n        this.closeSignUpDialog(() => {\n          this.closeSignInDialog(() => {\n            const user = value.user;\n            const displayName = user.displayName;\n            const emailAddress = user.email;\n\n            this.openSnackbar(`Signed in as ${displayName || emailAddress}`);\n          });\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/account-exists-with-different-credential':\n          case 'auth/auth-domain-config-required':\n          case 'auth/cancelled-popup-request':\n          case 'auth/operation-not-allowed':\n          case 'auth/operation-not-supported-in-this-environment':\n          case 'auth/popup-blocked':\n          case 'auth/popup-closed-by-user':\n          case 'auth/unauthorized-domain':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  resetPassword = (emailAddress) => {\n    if (this.state.isSignedIn) {\n      return;\n    }\n\n    if (!emailAddress) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.sendPasswordResetEmail(emailAddress).then(() => {\n        this.closeResetPasswordDialog(() => {\n          this.openSnackbar(`Password reset e-mail sent to ${emailAddress}`);\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/invalid-email':\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n          case 'auth/user-not-found':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  addAvatar = () => {\n    const { user, isSignedIn, avatar } = this.state;\n\n    if (!user || !isSignedIn || !avatar) {\n      return;\n    }\n\n    if (user.photoURL) {\n      return;\n    }\n\n    const errors = validate({\n      avatar: avatar\n    }, {\n      avatar: constraints.avatar\n    });\n\n    if (errors) {\n      this.setState((state) => ({\n        addAvatarDialog: {\n          ...state.addAvatarDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ photoURL: avatar }).then(() => {\n        this.closeAddAvatarDialog(() => {\n          this.openSnackbar('Avatar added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  changeAvatar = () => {\n    const { user, isSignedIn, avatar } = this.state;\n\n    if (!user || !isSignedIn || !avatar) {\n      return;\n    }\n\n    const errors = validate({\n      avatar: avatar\n    }, {\n      avatar: constraints.avatar\n    });\n\n    if (errors) {\n      this.setState((state) => ({\n        changeAvatarDialog: {\n          ...state.changeAvatarDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    if (user.photoURL === avatar) {\n      this.openSnackbar('Avatar already being used');\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ photoURL: avatar }).then(() => {\n        this.closeChangeAvatarDialog(() => {\n          this.openSnackbar('Avatar changed');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  addDisplayName = () => {\n    const { user, isSignedIn, displayName } = this.state;\n\n    if (!user || !isSignedIn || !displayName) {\n      return;\n    }\n\n    if (user.displayName) {\n      return;\n    }\n\n    const errors = validate({\n      displayName: displayName\n    }, {\n      displayName: constraints.username\n    });\n\n    if (errors) {\n      this.setState((state) => ({\n        addDisplayNameDialog: {\n          ...state.addDisplayNameDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ displayName }).then(() => {\n        this.closeAddDisplayNameDialog(() => {\n          this.openSnackbar('Display name added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  changeDisplayName = () => {\n    const { user, isSignedIn, displayName } = this.state;\n\n    if (!user || !isSignedIn || !displayName) {\n      return;\n    }\n\n    const errors = validate({\n      displayName: displayName\n    }, {\n      displayName: constraints.username\n    });\n\n    if (errors) {\n      this.setState((state) => ({\n        changeDisplayNameDialog: {\n          ...state.changeDisplayNameDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    if (displayName === user.displayName) {\n      this.openSnackbar(`Display name is already ${displayName}`);\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateProfile({ displayName }).then(() => {\n        this.closeChangeDisplayNameDialog(() => {\n          this.openSnackbar('Display name changed');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  addEmailAddress = () => {\n    const { user, isSignedIn, emailAddress } = this.state;\n\n    if (!user || !isSignedIn || !emailAddress) {\n      return;\n    }\n\n    if (user.email) {\n      return;\n    }\n\n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState((state) => ({\n        addEmailAddressDialog: {\n          ...state.addEmailAddressDialog,\n          errors\n        }\n      }));\n\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.updateEmail(emailAddress).then(() => {\n        this.closeAddEmailAddressDialog(() => {\n          this.openSnackbar('E-mail address added');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  verifyEmailAddress = (callback) => {\n    const { user, isSignedIn } = this.state;\n\n    if (!user || !user.email || !isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      user.sendEmailVerification().then(() => {\n        this.setState({\n          isVerifyingEmailAddress: true\n        }, () => {\n          const emailAddress = user.email;\n\n          this.openSnackbar(`Verification e-mail sent to ${emailAddress}`);\n\n          if (callback && typeof callback === 'function') {\n            callback();\n          }\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          case 'auth/missing-android-pkg-name':\n          case 'auth/missing-continue-uri':\n          case 'auth/missing-ios-bundle-id':\n          case 'auth/invalid-continue-uri':\n          case 'auth/unauthorized-continue-uri':\n            this.openSnackbar(message);\n            return;\n\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  signOut = () => {\n    if (!this.state.isSignedIn) {\n      return;\n    }\n\n    this.setState({\n      isPerformingAuthAction: true\n    }, () => {\n      auth.signOut().then(() => {\n        this.closeSignOutDialog(() => {\n          this.openSnackbar('Signed out');\n        });\n      }).catch((reason) => {\n        const code = reason.code;\n        const message = reason.message;\n\n        switch (code) {\n          default:\n            this.openSnackbar(message);\n            return;\n        }\n      }).finally(() => {\n        this.setState({\n          isPerformingAuthAction: false\n        });\n      });\n    });\n  };\n\n  updateTheme = (palette, removeLocalStorage, callback) => {\n    const { primaryColor, secondaryColor, type } = this.state;\n\n    if (!palette.primaryColor) {\n      palette.primaryColor = primaryColor;\n    }\n\n    if (!palette.secondaryColor) {\n      palette.secondaryColor = secondaryColor;\n    }\n\n    if (!palette.type) {\n      palette.type = type;\n    }\n\n    theme = createMuiTheme({\n      palette: {\n        primary: colors.find(color => color.id === palette.primaryColor).import,\n        secondary: colors.find(color => color.id === palette.secondaryColor).import,\n        type: palette.type\n      }\n    });\n\n    this.setState({\n      primaryColor: palette.primaryColor,\n      secondaryColor: palette.secondaryColor,\n      type: palette.type\n    }, () => {\n      if (removeLocalStorage) {\n        localStorage.removeItem('theme');\n      } else {\n        localStorage.setItem('theme', JSON.stringify({\n          primaryColor: palette.primaryColor,\n          secondaryColor: palette.secondaryColor,\n          type: palette.type\n        }));\n      }\n\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  resetTheme = () => {\n    this.updateTheme({\n      primaryColor: settings.theme.primaryColor.name,\n      secondaryColor: settings.theme.secondaryColor.name,\n      type: settings.theme.type\n    }, true, () => {\n      this.openSnackbar('Settings reset');\n    });\n  };\n\n  changePrimaryColor = (event) => {\n    const primaryColor = event.target.value;\n\n    this.updateTheme({\n      primaryColor\n    });\n  };\n\n  changeSecondaryColor = (event) => {\n    const secondaryColor = event.target.value;\n\n    this.updateTheme({\n      secondaryColor\n    });\n  };\n\n  changeType = (event) => {\n    const type = event.target.value;\n\n    this.updateTheme({\n      type\n    });\n  };\n\n  openSignUpDialog = () => {\n    this.setState({\n      signUpDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignUpDialog = (callback) => {\n    this.setState({\n      signUpDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSignInDialog = () => {\n    this.setState({\n      signInDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignInDialog = (callback) => {\n    this.setState({\n      signInDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openResetPasswordDialog = () => {\n    this.setState({\n      resetPasswordDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeResetPasswordDialog = (callback) => {\n    this.setState({\n      resetPasswordDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openWelcomeDialog = () => {\n    this.setState({\n      welcomeDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeWelcomeDialog = (callback) => {\n    this.setState({\n      welcomeDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSettingsDialog = () => {\n    this.setState({\n      settingsDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSettingsDialog = (callback) => {\n    this.setState({\n      settingsDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddAvatarDialog = () => {\n    this.setState({\n      addAvatarDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddAvatarDialog = (callback) => {\n    this.setState({\n      addAvatarDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openChangeAvatarDialog = () => {\n    this.setState({\n      changeAvatarDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeChangeAvatarDialog = (callback) => {\n    this.setState({\n      changeAvatarDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddDisplayNameDialog = () => {\n    this.setState({\n      addDisplayNameDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddDisplayNameDialog = (callback) => {\n    this.setState({\n      addDisplayNameDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openChangeDisplayNameDialog = () => {\n    this.setState({\n      changeDisplayNameDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeChangeDisplayNameDialog = (callback) => {\n    this.setState({\n      changeDisplayNameDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openAddEmailAddressDialog = () => {\n    this.setState({\n      addEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeAddEmailAddressDialog = (callback) => {\n    this.setState({\n      addEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  openSignOutDialog = () => {\n    this.setState({\n      signOutDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeSignOutDialog = (callback) => {\n    this.setState({\n      signOutDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  handleAvatarChange = (event) => {\n    const avatar = event.target.value;\n\n    this.setState({ avatar });\n  };\n\n  handleDisplayNameChange = (event) => {\n    const displayName = event.target.value;\n\n    this.setState({ displayName });\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  openSnackbar = (message) => {\n    this.setState({\n      snackbar: {\n        autoHideDuration: readingTime(message).time * 2,\n        message,\n        open: true\n      }\n    });\n  };\n\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? '' : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n\n\n  render() {\n    const {\n      primaryColor,\n      secondaryColor,\n      type,\n      isAuthReady,\n      isPerformingAuthAction,\n      isVerifyingEmailAddress,\n      isSignedIn,\n      user,\n      avatar,\n      displayName,\n      emailAddress\n    } = this.state;\n\n    const {\n      signUpDialog,\n      signInDialog,\n      resetPasswordDialog,\n      welcomeDialog,\n      settingsDialog,\n      addAvatarDialog,\n      changeAvatarDialog,\n      addDisplayNameDialog,\n      changeDisplayNameDialog,\n      addEmailAddressDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n\n    var routeComponents = this.state.trunks.map((trunk, key) => <Route key={key} path={\"/\" + trunk.key} render={() => (<TrunkContent isSignedIn={isSignedIn} trunk={trunk}></TrunkContent>)} />);\n    console.log(routeComponents)\n    return (\n      <Router>\n        <MuiThemeProvider theme={theme}>\n          <div style={{ minHeight: '100vh', backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa' }}>\n            {!isAuthReady &&\n              <LaunchScreen />\n            }\n\n            {isAuthReady &&\n              <React.Fragment>\n                <Bar\n                  title={settings.title}\n\n                  isSignedIn={isSignedIn}\n                  isPerformingAuthAction={isPerformingAuthAction}\n\n                  user={user}\n\n                  onSignUpClick={this.openSignUpDialog}\n                  onSignInClick={this.openSignInDialog}\n\n                  onSettingsClick={this.openSettingsDialog}\n                  onSignOutClick={this.openSignOutDialog}\n                />\n\n                <Switch>\n                  <Route path=\"/\" exact render={() => (<HomeContent isSignedIn={isSignedIn} title={settings.title}/>) } />\n                  {routeComponents}\n                  <Route component={NotFoundContent} />\n                  )\n\n                  <Route path=\"/\" render={() => (<h2>hello</h2>)}/>\n\n                </Switch>\n\n                {isSignedIn &&\n                  <React.Fragment>\n                    <Hidden only=\"xs\">\n                      <WelcomeDialog\n                        open={welcomeDialog.open}\n\n                        title={settings.title}\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        onClose={this.closeWelcomeDialog}\n\n                        onCancelClick={this.closeWelcomeDialog}\n                        onVerifyClick={() => {\n                          this.verifyEmailAddress(() => {\n                            this.closeWelcomeDialog()\n                          })\n                        }}\n                      />\n\n                      <SettingsDialog\n                        open={settingsDialog.open}\n\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        isVerifyingEmailAddress={isVerifyingEmailAddress}\n                        colors={colors}\n                        primaryColor={primaryColor}\n                        secondaryColor={secondaryColor}\n                        type={type}\n                        defaultTheme={settings.theme}\n\n                        onClose={this.closeSettingsDialog}\n                        onAddAvatarClick={this.openAddAvatarDialog}\n                        onChangeAvatarClick={this.openChangeAvatarDialog}\n                        onAddDisplayNameClick={this.openAddDisplayNameDialog}\n                        onChangeDisplayNameClick={this.openChangeDisplayNameDialog}\n                        onAddEmailAddressClick={this.openAddEmailAddressDialog}\n                        onVerifyEmailAddressClick={this.verifyEmailAddress}\n                        onPrimaryColorChange={this.changePrimaryColor}\n                        onSecondaryColorChange={this.changeSecondaryColor}\n                        onTypeChange={this.changeType}\n                        onResetClick={this.resetTheme}\n                      />\n\n                      <InputDialog\n                        open={addAvatarDialog.open}\n\n                        title=\"Add avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(addAvatarDialog.errors && addAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(addAvatarDialog.errors && addAvatarDialog.errors.avatar) ? addAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder=\"Avatar URL\"\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddAvatarDialog}\n                        onOkClick={this.addAvatar}\n                      />\n\n                      <InputDialog\n                        open={changeAvatarDialog.open}\n\n                        title=\"Change avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar) ? changeAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder={user.photoURL}\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeAvatarDialog}\n                        onOkClick={this.changeAvatar}\n                      />\n\n                      <InputDialog\n                        open={addDisplayNameDialog.open}\n\n                        title=\"Add display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName) ? addDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder=\"Display name\"\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddDisplayNameDialog}\n                        onOkClick={this.addDisplayName}\n                      />\n\n                      <InputDialog\n                        open={changeDisplayNameDialog.open}\n\n                        title=\"Change display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName) ? changeDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder={user.displayName}\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeDisplayNameDialog}\n                        onOkClick={this.changeDisplayName}\n                      />\n\n                      <InputDialog\n                        open={addEmailAddressDialog.open}\n\n                        title=\"Add e-mail address\"\n                        contentText=\"Your e-mail address is used to identify you. It's not visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"email\"\n                            autoFocus\n                            error={!!(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress)}\n                            fullWidth\n                            helperText={(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress) ? addEmailAddressDialog.errors.emailAddress[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleEmailAddressChange}\n                            placeholder=\"E-mail address\"\n                            required\n                            type=\"email\"\n                            value={emailAddress}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!emailAddress || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddEmailAddressDialog}\n                        onExited={() => {\n                          this.setState({\n                            emailAddress: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddEmailAddressDialog}\n                        onOkClick={this.addEmailAddress}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <WelcomeDialog\n                        fullScreen\n                        open={welcomeDialog.open}\n\n                        title={settings.title}\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        onClose={this.closeWelcomeDialog}\n\n                        onCancelClick={this.closeWelcomeDialog}\n                        onVerifyClick={() => {\n                          this.verifyEmailAddress(() => {\n                            this.closeWelcomeDialog()\n                          })\n                        }}\n                      />\n\n                      <SettingsDialog\n                        fullScreen\n                        open={settingsDialog.open}\n\n                        user={user}\n                        isPerformingAuthAction={isPerformingAuthAction}\n                        isVerifyingEmailAddress={isVerifyingEmailAddress}\n                        colors={colors}\n                        primaryColor={primaryColor}\n                        secondaryColor={secondaryColor}\n                        type={type}\n                        defaultTheme={settings.theme}\n\n                        onClose={this.closeSettingsDialog}\n                        onAddAvatarClick={this.openAddAvatarDialog}\n                        onChangeAvatarClick={this.openChangeAvatarDialog}\n                        onAddDisplayNameClick={this.openAddDisplayNameDialog}\n                        onChangeDisplayNameClick={this.openChangeDisplayNameDialog}\n                        onAddEmailAddressClick={this.openAddEmailAddressDialog}\n                        onVerifyEmailAddressClick={this.verifyEmailAddress}\n                        onPrimaryColorChange={this.changePrimaryColor}\n                        onSecondaryColorChange={this.changeSecondaryColor}\n                        onTypeChange={this.changeType}\n                        onResetClick={this.resetTheme}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={addAvatarDialog.open}\n\n                        title=\"Add avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(addAvatarDialog.errors && addAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(addAvatarDialog.errors && addAvatarDialog.errors.avatar) ? addAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder=\"Avatar URL\"\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddAvatarDialog}\n                        onOkClick={this.addAvatar}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={changeAvatarDialog.open}\n\n                        title=\"Change avatar\"\n                        contentText=\"Your avatar is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"photo\"\n                            autoFocus\n                            error={!!(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar)}\n                            fullWidth\n                            helperText={(changeAvatarDialog.errors && changeAvatarDialog.errors.avatar) ? changeAvatarDialog.errors.avatar[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleAvatarChange}\n                            placeholder={user.photoURL}\n                            required\n                            type=\"url\"\n                            value={avatar}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!avatar || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeAvatarDialog}\n                        onExited={() => {\n                          this.setState({\n                            avatar: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeAvatarDialog}\n                        onOkClick={this.changeAvatar}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={addDisplayNameDialog.open}\n\n                        title=\"Add display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(addDisplayNameDialog.errors && addDisplayNameDialog.errors.displayName) ? addDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder=\"Display name\"\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddDisplayNameDialog}\n                        onOkClick={this.addDisplayName}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={changeDisplayNameDialog.open}\n\n                        title=\"Change display name\"\n                        contentText=\"Your display name is used to represent you. It's visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"name\"\n                            autoFocus\n                            error={!!(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName)}\n                            fullWidth\n                            helperText={(changeDisplayNameDialog.errors && changeDisplayNameDialog.errors.displayName) ? changeDisplayNameDialog.errors.displayName[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleDisplayNameChange}\n                            placeholder={user.displayName}\n                            required\n                            type=\"text\"\n                            value={displayName}\n                          />\n                        }\n                        okText=\"Change\"\n                        disableOkButton={!displayName || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeChangeDisplayNameDialog}\n                        onExited={() => {\n                          this.setState({\n                            displayName: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeChangeDisplayNameDialog}\n                        onOkClick={this.changeDisplayName}\n                      />\n\n                      <InputDialog\n                        fullScreen\n                        open={addEmailAddressDialog.open}\n\n                        title=\"Add e-mail address\"\n                        contentText=\"Your e-mail address is used to identify you. It's not visible to other users and can be changed any time.\"\n                        textField={\n                          <TextField\n                            autoComplete=\"email\"\n                            autoFocus\n                            error={!!(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress)}\n                            fullWidth\n                            helperText={(addEmailAddressDialog.errors && addEmailAddressDialog.errors.emailAddress) ? addEmailAddressDialog.errors.emailAddress[0] : ''}\n                            margin=\"normal\"\n                            onChange={this.handleEmailAddressChange}\n                            placeholder=\"E-mail address\"\n                            required\n                            type=\"email\"\n                            value={emailAddress}\n                          />\n                        }\n                        okText=\"Add\"\n                        disableOkButton={!emailAddress || isPerformingAuthAction}\n                        highlightOkButton\n\n                        onClose={this.closeAddEmailAddressDialog}\n                        onExited={() => {\n                          this.setState({\n                            emailAddress: ''\n                          });\n                        }}\n\n                        onCancelClick={this.closeAddEmailAddressDialog}\n                        onOkClick={this.addEmailAddress}\n                      />\n                    </Hidden>\n\n                    <ConfirmationDialog\n                      open={signOutDialog.open}\n\n                      title=\"Sign out?\"\n                      contentText=\"While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\"\n                      okText=\"Sign Out\"\n                      disableOkButton={isPerformingAuthAction}\n                      highlightOkButton\n\n                      onClose={this.closeSignOutDialog}\n                      onCancelClick={this.closeSignOutDialog}\n                      onOkClick={this.signOut}\n                    />\n                  </React.Fragment>\n                }\n\n                {!isSignedIn &&\n                  <React.Fragment>\n                    <Hidden only=\"xs\">\n                      <SignUpDialog\n                        open={signUpDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        signUp={this.signUp}\n\n                        onClose={this.closeSignUpDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                      />\n\n                      <SignInDialog\n                        open={signInDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        signIn={this.signIn}\n\n                        onClose={this.closeSignInDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                        onResetPasswordClick={this.openResetPasswordDialog}\n                      />\n                    </Hidden>\n\n                    <Hidden only={['sm', 'md', 'lg', 'xl']}>\n                      <SignUpDialog\n                        fullScreen\n                        open={signUpDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        signUp={this.signUp}\n\n                        onClose={this.closeSignUpDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                      />\n\n                      <SignInDialog\n                        fullScreen\n                        open={signInDialog.open}\n\n                        isPerformingAuthAction={isPerformingAuthAction}\n\n                        signIn={this.signIn}\n\n                        onClose={this.closeSignInDialog}\n                        onAuthProviderClick={this.signInWithProvider}\n                        onResetPasswordClick={this.openResetPasswordDialog}\n                      />\n                    </Hidden>\n\n                    <ResetPasswordDialog\n                      open={resetPasswordDialog.open}\n\n                      isPerformingAuthAction={isPerformingAuthAction}\n\n                      resetPassword={this.resetPassword}\n\n                      onClose={this.closeResetPasswordDialog}\n                    />\n                  </React.Fragment>\n                }\n\n                <Snackbar\n                  autoHideDuration={snackbar.autoHideDuration}\n                  message={snackbar.message}\n                  open={snackbar.open}\n                  onClose={this.closeSnackbar}\n                />\n              </React.Fragment>\n            }\n          </div>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n\n\n\n  componentDidMount() {\n    this._isMounted = true;\n    const theme = JSON.parse(localStorage.getItem('theme'));\n\n    if (theme) {\n      this.updateTheme(theme);\n    }\n\n    this.removeAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      if (this._isMounted) {\n        this.setState({\n          isAuthReady: true,\n          isSignedIn: !!user,\n          user\n        });\n      }\n    });\n\n    this.listentoDB(this.trunksRef);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n\n    this.removeAuthObserver();\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}