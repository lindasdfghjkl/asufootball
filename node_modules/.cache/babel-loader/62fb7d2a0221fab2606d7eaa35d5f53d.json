{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\src\\\\dialogs\\\\InputDialog\\\\InputDialog.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nvar InputDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputDialog, _Component);\n\n  function InputDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InputDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InputDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleKeyPress = function (event) {\n      var key = event.key;\n\n      if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n        return;\n      }\n\n      if (key === 'Enter') {\n        event.preventDefault();\n\n        _this.props.onOkClick();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(InputDialog, [{\n    key: \"render\",\n    value: function render() {\n      // Dialog Properties\n      var _this$props = this.props,\n          fullScreen = _this$props.fullScreen,\n          open = _this$props.open; // Custom Properties\n\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          contentText = _this$props2.contentText,\n          textField = _this$props2.textField,\n          cancelText = _this$props2.cancelText,\n          okText = _this$props2.okText,\n          disableOkButton = _this$props2.disableOkButton,\n          highlightOkButton = _this$props2.highlightOkButton; // Dialog Events\n\n      var _this$props3 = this.props,\n          onClose = _this$props3.onClose,\n          onExited = _this$props3.onExited; // Custom Events\n\n      var _this$props4 = this.props,\n          onCancelClick = _this$props4.onCancelClick,\n          onOkClick = _this$props4.onOkClick;\n\n      if (!onClose) {\n        return null;\n      }\n\n      return React.createElement(Dialog, {\n        fullScreen: fullScreen,\n        open: open,\n        onClose: onClose,\n        onExited: onExited,\n        onKeyPress: this.handleKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, title && React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, title), contentText && React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, contentText), textField && React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, textField)), (onCancelClick || onOkClick) && React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, onCancelClick && React.createElement(Button, {\n        color: \"primary\",\n        onClick: onCancelClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, cancelText || 'Cancel'), onOkClick && React.createElement(Button, {\n        color: \"primary\",\n        disabled: disableOkButton,\n        variant: highlightOkButton && 'contained',\n        onClick: onOkClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, okText || 'OK')));\n    }\n  }]);\n\n  return InputDialog;\n}(Component);\n\nInputDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  textField: PropTypes.element,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\nexport default InputDialog;","map":{"version":3,"sources":["C:\\Users\\xlind\\Documents\\ASUFootballEquipment\\app\\src\\dialogs\\InputDialog\\InputDialog.js"],"names":["React","Component","PropTypes","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","InputDialog","handleKeyPress","event","key","altKey","ctrlKey","metaKey","shiftKey","preventDefault","props","onOkClick","fullScreen","open","title","contentText","textField","cancelText","okText","disableOkButton","highlightOkButton","onClose","onExited","onCancelClick","propTypes","bool","isRequired","string","element","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport Button from '@material-ui/core/Button';\n\nclass InputDialog extends Component {\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.props.onOkClick();\n    }\n  };\n\n  render() {\n    // Dialog Properties\n    const { fullScreen, open } = this.props;\n\n    // Custom Properties\n    const { title, contentText, textField, cancelText, okText, disableOkButton, highlightOkButton } = this.props;\n\n    // Dialog Events\n    const { onClose, onExited } = this.props;\n\n    // Custom Events\n    const { onCancelClick, onOkClick } = this.props;\n\n    if (!onClose) {\n      return null;\n    }\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={onExited} onKeyPress={this.handleKeyPress}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        {contentText &&\n          <DialogContent>\n            <DialogContentText>{contentText}</DialogContentText>\n\n            {textField &&\n              <form>\n                {textField}\n              </form>\n            }\n          </DialogContent>\n        }\n\n        {(onCancelClick || onOkClick) &&\n          <DialogActions>\n            {onCancelClick &&\n              <Button color=\"primary\" onClick={onCancelClick}>\n                {cancelText || 'Cancel'}\n              </Button>\n            }\n\n            {onOkClick &&\n              <Button color=\"primary\" disabled={disableOkButton} variant={highlightOkButton && 'contained'} onClick={onOkClick}>\n                {okText || 'OK'}\n              </Button>\n            }\n          </DialogActions>\n        }\n      </Dialog>\n    );\n  }\n}\n\nInputDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  title: PropTypes.string,\n  contentText: PropTypes.string,\n  textField: PropTypes.element,\n  cancelText: PropTypes.string,\n  okText: PropTypes.string,\n  disableOkButton: PropTypes.bool,\n  highlightOkButton: PropTypes.bool,\n\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  onCancelClick: PropTypes.func,\n  onOkClick: PropTypes.func\n};\n\nexport default InputDialog;"]},"metadata":{},"sourceType":"module"}