{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\src\\\\dialogs\\\\ResetPasswordDialog\\\\ResetPasswordDialog.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport constraints from '../../constraints';\nvar initialState = {\n  emailAddress: '',\n  errors: null\n};\n\nvar ResetPasswordDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResetPasswordDialog, _Component);\n\n  function ResetPasswordDialog(props) {\n    var _this;\n\n    _classCallCheck(this, ResetPasswordDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResetPasswordDialog).call(this, props));\n\n    _this.resetPassword = function () {\n      var emailAddress = _this.state.emailAddress;\n      var errors = validate({\n        emailAddress: emailAddress\n      }, {\n        emailAddress: constraints.emailAddress\n      });\n\n      if (errors) {\n        _this.setState({\n          errors: errors\n        });\n      } else {\n        _this.setState({\n          errors: null\n        }, function () {\n          _this.props.resetPassword(emailAddress);\n        });\n      }\n    };\n\n    _this.handleExited = function () {\n      _this.setState(initialState);\n    };\n\n    _this.handleKeyPress = function (event) {\n      var key = event.key;\n\n      if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n        return;\n      }\n\n      if (key === 'Enter') {\n        event.preventDefault();\n\n        _this.resetPassword();\n      }\n    };\n\n    _this.handleEmailAddressChange = function (event) {\n      var emailAddress = event.target.value;\n\n      _this.setState({\n        emailAddress: emailAddress\n      });\n    };\n\n    _this.handleResetPasswordClick = function () {\n      _this.resetPassword();\n    };\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(ResetPasswordDialog, [{\n    key: \"render\",\n    value: function render() {\n      // Properties\n      var _this$props = this.props,\n          open = _this$props.open,\n          isPerformingAuthAction = _this$props.isPerformingAuthAction; // Events\n\n      var onClose = this.props.onClose;\n      var _this$state = this.state,\n          emailAddress = _this$state.emailAddress,\n          errors = _this$state.errors;\n      return React.createElement(Dialog, {\n        open: open,\n        onClose: onClose,\n        onExited: this.handleExited,\n        onKeyPress: this.handleKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Reset your password\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoComplete: \"email\",\n        autoFocus: true,\n        error: !!(errors && errors.emailAddress),\n        fullWidth: true,\n        helperText: errors && errors.emailAddress ? errors.emailAddress[0] : '',\n        margin: \"normal\",\n        onChange: this.handleEmailAddressChange,\n        placeholder: \"E-mail address\",\n        required: true,\n        type: \"email\",\n        value: emailAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        color: \"primary\",\n        disabled: !emailAddress || isPerformingAuthAction,\n        variant: \"contained\",\n        onClick: this.handleResetPasswordClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Reset Password\")));\n    }\n  }]);\n\n  return ResetPasswordDialog;\n}(Component);\n\nResetPasswordDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  resetPassword: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ResetPasswordDialog;","map":{"version":3,"sources":["C:\\Users\\xlind\\Documents\\ASUFootballEquipment\\app\\src\\dialogs\\ResetPasswordDialog\\ResetPasswordDialog.js"],"names":["React","Component","PropTypes","validate","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","TextField","Button","constraints","initialState","emailAddress","errors","ResetPasswordDialog","props","resetPassword","state","setState","handleExited","handleKeyPress","event","key","altKey","ctrlKey","metaKey","shiftKey","preventDefault","handleEmailAddressChange","target","value","handleResetPasswordClick","open","isPerformingAuthAction","onClose","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport constraints from '../../constraints';\n\nconst initialState = {\n  emailAddress: '',\n\n  errors: null\n};\n\nclass ResetPasswordDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n    \n    const errors = validate({\n      emailAddress: emailAddress\n    }, {\n      emailAddress: constraints.emailAddress\n    });\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.resetPassword(emailAddress);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n\n      this.resetPassword();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handleResetPasswordClick = () => {\n    this.resetPassword();\n  };\n\n  render() {\n    // Properties\n    const { open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose } = this.props;\n\n    const { emailAddress, errors } = this.state;\n\n    return (\n      <Dialog open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Reset your password\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            An e-mail will be sent to your e-mail address containing instructions on how to reset your password.\n          </DialogContentText>\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              autoFocus\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              placeholder=\"E-mail address\"\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={!emailAddress || isPerformingAuthAction} variant=\"contained\" onClick={this.handleResetPasswordClick}>Reset Password</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nResetPasswordDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  resetPassword: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired\n};\n\nexport default ResetPasswordDialog;"]},"metadata":{},"sourceType":"module"}