{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\src\\\\dialogs\\\\AddTrunkDialog\\\\AddTrunkDialog.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nvar initialState = {\n  name: ''\n};\n\nvar AddTrunkDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddTrunkDialog, _Component);\n\n  function AddTrunkDialog(props) {\n    var _this;\n\n    _classCallCheck(this, AddTrunkDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddTrunkDialog).call(this, props));\n\n    _this.onChangeName = function (event) {\n      var name = event.target.value;\n\n      _this.setState({\n        name: name\n      });\n    };\n\n    _this.addTrunk = function (event) {\n      global.firebaseRef = global.firebaseApp.database().ref().child('trunks');\n      global.firebaseRef.push({\n        name: _this.capitalize(_this.state.name),\n        status: 0\n      });\n\n      _this.setState(initialState);\n\n      _this.props.onTrunkAdded();\n    };\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(AddTrunkDialog, [{\n    key: \"capitalize\",\n    value: function capitalize(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Properties\n      var _this$props = this.props,\n          open = _this$props.open,\n          onClose = _this$props.onClose;\n      var name = this.state.name;\n      return React.createElement(Dialog, {\n        open: open,\n        onClose: onClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Add Trunk\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Name\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: this.onChangeName,\n        value: this.capitalize(name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: onClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.addTrunk,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return AddTrunkDialog;\n}(Component);\n\nAddTrunkDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default AddTrunkDialog;","map":{"version":3,"sources":["C:\\Users\\xlind\\Documents\\ASUFootballEquipment\\app\\src\\dialogs\\AddTrunkDialog\\AddTrunkDialog.js"],"names":["React","Component","PropTypes","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","initialState","name","AddTrunkDialog","props","onChangeName","event","target","value","setState","addTrunk","global","firebaseRef","firebaseApp","database","ref","child","push","capitalize","state","status","onTrunkAdded","str","charAt","toUpperCase","slice","open","onClose","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst initialState = {\n    name: '',\n};\n\n\nclass AddTrunkDialog extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = initialState;\n    }\n\n    onChangeName = (event) => {\n        const name = event.target.value;\n        this.setState({ name });\n    };\n    \n    addTrunk = event => {\n        global.firebaseRef = global.firebaseApp.database().ref().child('trunks')\n        global.firebaseRef.push({ name: this.capitalize(this.state.name), status: 0 }); \n        this.setState(initialState);\n        this.props.onTrunkAdded();\n    };\n\n    capitalize(str){\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n\n\n  render() {\n    // Properties\n    const { open, onClose} = this.props;\n    var { name } = this.state;\n\n    return (\n            <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add Trunk</DialogTitle>\n                <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Name\"\n                    type=\"text\"\n                    fullWidth\n                    onChange={this.onChangeName}\n                    value={this.capitalize(name)}\n                />\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={onClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={this.addTrunk} color=\"primary\">\n                    Add\n                </Button>\n                </DialogActions>\n            </Dialog> \n    );\n  }\n}\n\nAddTrunkDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AddTrunkDialog;"]},"metadata":{},"sourceType":"module"}