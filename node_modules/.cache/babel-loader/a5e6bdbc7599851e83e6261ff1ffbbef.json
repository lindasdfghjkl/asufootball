{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\src\\\\tabs\\\\settings\\\\AppearanceTab\\\\AppearanceTab.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      marginBottom: theme.spacing(0)\n    }\n  };\n};\n\nvar types = ['light', 'dark'];\n\nvar AppearanceTab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppearanceTab, _Component);\n\n  function AppearanceTab() {\n    _classCallCheck(this, AppearanceTab);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppearanceTab).apply(this, arguments));\n  }\n\n  _createClass(AppearanceTab, [{\n    key: \"render\",\n    value: function render() {\n      // Styling\n      var classes = this.props.classes; // Properties\n\n      var _this$props = this.props,\n          colors = _this$props.colors,\n          primaryColor = _this$props.primaryColor,\n          secondaryColor = _this$props.secondaryColor,\n          type = _this$props.type; // Events\n\n      var _this$props2 = this.props,\n          onPrimaryColorChange = _this$props2.onPrimaryColorChange,\n          onSecondaryColorChange = _this$props2.onSecondaryColorChange,\n          onTypeChange = _this$props2.onTypeChange;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        classes: {\n          root: classes.root\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"The app's primary and secondary colors, and their variants, help create a color theme that is harmonious, ensures accessible text, and distinguishes UI elements and surfaces from one another.\"), React.createElement(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Primary color\"), React.createElement(Select, {\n        onChange: onPrimaryColorChange,\n        value: primaryColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, colors.map(function (color) {\n        return React.createElement(MenuItem, {\n          key: color.id,\n          value: color.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, color.name);\n      }))), React.createElement(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Secondary color\"), React.createElement(Select, {\n        onChange: onSecondaryColorChange,\n        value: secondaryColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, colors.map(function (color) {\n        return React.createElement(MenuItem, {\n          key: color.id,\n          value: color.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, color.name);\n      }))), React.createElement(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Type\"), React.createElement(Select, {\n        onChange: onTypeChange,\n        value: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, types.map(function (type, index) {\n        return React.createElement(MenuItem, {\n          key: index,\n          value: type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, type.charAt(0).toUpperCase() + type.slice(1));\n      }))));\n    }\n  }]);\n\n  return AppearanceTab;\n}(Component);\n\nAppearanceTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  colors: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(AppearanceTab);","map":{"version":3,"sources":["C:\\Users\\xlind\\Documents\\ASUFootballEquipment\\app\\src\\tabs\\settings\\AppearanceTab\\AppearanceTab.js"],"names":["React","Component","PropTypes","withStyles","DialogContentText","FormControl","InputLabel","Select","MenuItem","styles","theme","root","marginBottom","spacing","types","AppearanceTab","classes","props","colors","primaryColor","secondaryColor","type","onPrimaryColorChange","onSecondaryColorChange","onTypeChange","map","color","id","name","index","charAt","toUpperCase","slice","propTypes","object","isRequired","array","string","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst styles = (theme) => ({\n  root: {\n    marginBottom: theme.spacing(0)\n  }\n});\n\nconst types = [\n  'light',\n  'dark'\n];\n\nclass AppearanceTab extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { colors, primaryColor, secondaryColor, type } = this.props;\n\n    // Events\n    const { onPrimaryColorChange, onSecondaryColorChange, onTypeChange } = this.props;\n\n    return (\n      <React.Fragment>\n        <DialogContentText classes={{ root: classes.root }}>\n          The app's primary and secondary colors, and their variants, help create a color theme that is harmonious,\n          ensures accessible text, and distinguishes UI elements and surfaces from one another.\n        </DialogContentText>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Primary color</InputLabel>\n\n          <Select onChange={onPrimaryColorChange} value={primaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Secondary color</InputLabel>\n\n          <Select onChange={onSecondaryColorChange} value={secondaryColor}>\n            {colors.map((color) => {\n              return (<MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n\n        <FormControl fullWidth margin=\"normal\">\n          <InputLabel>Type</InputLabel>\n\n          <Select onChange={onTypeChange} value={type}>\n            {types.map((type, index) => {\n              return (<MenuItem key={index} value={type}>{type.charAt(0).toUpperCase() + type.slice(1)}</MenuItem>);\n            })}\n          </Select>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nAppearanceTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  colors: PropTypes.array.isRequired,\n  primaryColor: PropTypes.string.isRequired,\n  secondaryColor: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n\n  onPrimaryColorChange: PropTypes.func.isRequired,\n  onSecondaryColorChange: PropTypes.func.isRequired,\n  onTypeChange: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AppearanceTab);"]},"metadata":{},"sourceType":"module"}