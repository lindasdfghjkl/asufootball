{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\src\\\\dialogs\\\\SignUpDialog\\\\SignUpDialog.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport validate from 'validate.js';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport constraints from '../../constraints';\nimport AuthProviderList from '../../layout/AuthProviderList/AuthProviderList';\nvar initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n  errors: null\n};\n\nvar SignUpDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUpDialog, _Component);\n\n  function SignUpDialog(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUpDialog).call(this, props));\n\n    _this.signUp = function () {\n      var _this$state = _this.state,\n          emailAddress = _this$state.emailAddress,\n          password = _this$state.password,\n          passwordConfirmation = _this$state.passwordConfirmation;\n      var errors = validate({\n        emailAddress: emailAddress,\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      }, {\n        emailAddress: constraints.emailAddress,\n        password: constraints.password,\n        passwordConfirmation: constraints.passwordConfirmation\n      });\n\n      if (errors) {\n        _this.setState({\n          errors: errors\n        });\n      } else {\n        _this.setState({\n          errors: null\n        }, function () {\n          _this.props.signUp(emailAddress, password, passwordConfirmation);\n        });\n      }\n    };\n\n    _this.handleExited = function () {\n      _this.setState(initialState);\n    };\n\n    _this.handleKeyPress = function (event) {\n      var key = event.key;\n\n      if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n        return;\n      }\n\n      if (key === 'Enter') {\n        _this.signUp();\n      }\n    };\n\n    _this.handleEmailAddressChange = function (event) {\n      var emailAddress = event.target.value;\n\n      _this.setState({\n        emailAddress: emailAddress\n      });\n    };\n\n    _this.handlePasswordChange = function (event) {\n      var password = event.target.value;\n\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.handlePasswordConfirmationChange = function (event) {\n      var passwordConfirmation = event.target.value;\n\n      _this.setState({\n        passwordConfirmation: passwordConfirmation\n      });\n    };\n\n    _this.handleSignUpClick = function () {\n      _this.signUp();\n    };\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(SignUpDialog, [{\n    key: \"render\",\n    value: function render() {\n      // Properties\n      var _this$props = this.props,\n          fullScreen = _this$props.fullScreen,\n          open = _this$props.open,\n          isPerformingAuthAction = _this$props.isPerformingAuthAction; // Events\n\n      var _this$props2 = this.props,\n          onClose = _this$props2.onClose,\n          onAuthProviderClick = _this$props2.onAuthProviderClick;\n      var _this$state2 = this.state,\n          emailAddress = _this$state2.emailAddress,\n          password = _this$state2.password,\n          passwordConfirmation = _this$state2.passwordConfirmation,\n          errors = _this$state2.errors;\n      return React.createElement(Dialog, {\n        fullScreen: fullScreen,\n        open: open,\n        onClose: onClose,\n        onExited: this.handleExited,\n        onKeyPress: this.handleKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Sign up for an account\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Create an account to access features that are unavailable to users who haven't signed up.\"), React.createElement(AuthProviderList, {\n        isPerformingAuthAction: isPerformingAuthAction,\n        onAuthProviderClick: onAuthProviderClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoComplete: \"email\",\n        error: !!(errors && errors.emailAddress),\n        fullWidth: true,\n        helperText: errors && errors.emailAddress ? errors.emailAddress[0] : '',\n        label: \"E-mail address\",\n        margin: \"normal\",\n        onChange: this.handleEmailAddressChange,\n        required: true,\n        type: \"email\",\n        value: emailAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoComplete: \"new-password\",\n        error: !!(errors && errors.password),\n        fullWidth: true,\n        helperText: errors && errors.password ? errors.password[0] : '',\n        label: \"Password\",\n        margin: \"normal\",\n        onChange: this.handlePasswordChange,\n        required: true,\n        type: \"password\",\n        value: password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoComplete: \"password\",\n        error: !!(errors && errors.passwordConfirmation),\n        fullWidth: true,\n        helperText: errors && errors.passwordConfirmation ? errors.passwordConfirmation[0] : '',\n        label: \"Password confirmation\",\n        margin: \"normal\",\n        onChange: this.handlePasswordConfirmationChange,\n        required: true,\n        type: \"password\",\n        value: passwordConfirmation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        color: \"primary\",\n        disabled: !emailAddress || !password || !passwordConfirmation || isPerformingAuthAction,\n        variant: \"contained\",\n        onClick: this.handleSignUpClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Sign Up\")));\n    }\n  }]);\n\n  return SignUpDialog;\n}(Component);\n\nSignUpDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  signUp: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired\n};\nexport default SignUpDialog;","map":{"version":3,"sources":["C:\\Users\\xlind\\Documents\\ASUFootballEquipment\\app\\src\\dialogs\\SignUpDialog\\SignUpDialog.js"],"names":["React","Component","PropTypes","validate","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","TextField","Button","constraints","AuthProviderList","initialState","emailAddress","password","passwordConfirmation","errors","SignUpDialog","props","signUp","state","setState","handleExited","handleKeyPress","event","key","altKey","ctrlKey","metaKey","shiftKey","handleEmailAddressChange","target","value","handlePasswordChange","handlePasswordConfirmationChange","handleSignUpClick","fullScreen","open","isPerformingAuthAction","onClose","onAuthProviderClick","propTypes","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport validate from 'validate.js';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport constraints from '../../constraints';\n\nimport AuthProviderList from '../../layout/AuthProviderList/AuthProviderList';\n\nconst initialState = {\n  emailAddress: '',\n  password: '',\n  passwordConfirmation: '',\n\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const { emailAddress, password, passwordConfirmation } = this.state;\n    \n    const errors = validate({\n      emailAddress: emailAddress,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }, {\n      emailAddress: constraints.emailAddress,\n      password: constraints.password,\n      passwordConfirmation: constraints.passwordConfirmation\n    });\n\n    if (errors) {\n      this.setState({ errors });\n    } else {\n      this.setState({\n        errors: null\n      }, () => {\n        this.props.signUp(emailAddress, password, passwordConfirmation);\n      });\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleKeyPress = (event) => {\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === 'Enter') {\n      this.signUp();\n    }\n  };\n\n  handleEmailAddressChange = (event) => {\n    const emailAddress = event.target.value;\n\n    this.setState({ emailAddress });\n  };\n\n  handlePasswordChange = (event) => {\n    const password = event.target.value;\n\n    this.setState({ password });\n  };\n\n  handlePasswordConfirmationChange = (event) => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({ passwordConfirmation });\n  };\n\n  handleSignUpClick = () => {\n    this.signUp();\n  };\n\n  render() {\n    // Properties\n    const { fullScreen, open, isPerformingAuthAction } = this.props;\n\n    // Events\n    const { onClose, onAuthProviderClick } = this.props;\n\n    const { emailAddress, password, passwordConfirmation, errors } = this.state;\n\n    return (\n      <Dialog fullScreen={fullScreen} open={open} onClose={onClose} onExited={this.handleExited} onKeyPress={this.handleKeyPress}>\n        <DialogTitle>\n          Sign up for an account\n        </DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Create an account to access features that are unavailable to users who haven't signed up.\n          </DialogContentText>\n\n          <AuthProviderList isPerformingAuthAction={isPerformingAuthAction} onAuthProviderClick={onAuthProviderClick} />\n\n          <form>\n            <TextField\n              autoComplete=\"email\"\n              error={!!(errors && errors.emailAddress)}\n              fullWidth\n              helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\n              label=\"E-mail address\"\n              margin=\"normal\"\n              onChange={this.handleEmailAddressChange}\n              required\n              type=\"email\"\n              value={emailAddress}\n            />\n\n            <TextField\n              autoComplete=\"new-password\"\n              error={!!(errors && errors.password)}\n              fullWidth\n              helperText={(errors && errors.password) ? errors.password[0] : ''}\n              label=\"Password\"\n              margin=\"normal\"\n              onChange={this.handlePasswordChange}\n              required\n              type=\"password\"\n              value={password}\n            />\n\n            <TextField\n              autoComplete=\"password\"\n              error={!!(errors && errors.passwordConfirmation)}\n              fullWidth\n              helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\n              label=\"Password confirmation\"\n              margin=\"normal\"\n              onChange={this.handlePasswordConfirmationChange}\n              required\n              type=\"password\"\n              value={passwordConfirmation}\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button color=\"primary\" onClick={onClose}>Cancel</Button>\n          <Button color=\"primary\" disabled={(!emailAddress || !password || !passwordConfirmation) || isPerformingAuthAction} variant=\"contained\" onClick={this.handleSignUpClick}>Sign Up</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  fullScreen: PropTypes.bool,\n  open: PropTypes.bool.isRequired,\n\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n\n  signUp: PropTypes.func.isRequired,\n\n  onClose: PropTypes.func.isRequired,\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default SignUpDialog;"]},"metadata":{},"sourceType":"module"}