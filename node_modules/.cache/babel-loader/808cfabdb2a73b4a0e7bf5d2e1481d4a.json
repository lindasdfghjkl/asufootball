{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\xlind\\\\Documents\\\\ASUFootballEquipment\\\\app\\\\src\\\\tabs\\\\settings\\\\AccountTab\\\\AccountTab.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PortraitIcon from '@material-ui/icons/Portrait';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Profile from '../../../layout/Profile/Profile';\nimport ConfirmationDialog from '../../../dialogs/ConfirmationDialog/ConfirmationDialog';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      marginBottom: theme.spacing(0)\n    },\n    dialogContentTextUserComplete: {\n      marginTop: theme.spacing(1)\n    }\n  };\n};\n\nvar AccountTab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AccountTab, _Component);\n\n  function AccountTab(props) {\n    var _this;\n\n    _classCallCheck(this, AccountTab);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AccountTab).call(this, props));\n\n    _this.openVerifyEmailAddressDialog = function () {\n      _this.setState({\n        verifyEmailAddressDialog: {\n          open: true\n        }\n      });\n    };\n\n    _this.closeVerifyEmailAddressDialog = function (callback) {\n      _this.setState({\n        verifyEmailAddressDialog: {\n          open: false\n        }\n      }, function () {\n        if (callback && typeof callback === 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.verifyEmailAddress = function () {\n      _this.closeVerifyEmailAddressDialog(function () {\n        _this.props.onVerifyEmailAddressClick();\n      });\n    };\n\n    _this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AccountTab, [{\n    key: \"render\",\n    value: function render() {\n      // Styling\n      var classes = this.props.classes; // Properties\n\n      var _this$props = this.props,\n          user = _this$props.user,\n          isPerformingAuthAction = _this$props.isPerformingAuthAction,\n          isVerifyingEmailAddress = _this$props.isVerifyingEmailAddress; // Events\n\n      var _this$props2 = this.props,\n          onAddAvatarClick = _this$props2.onAddAvatarClick,\n          onChangeAvatarClick = _this$props2.onChangeAvatarClick,\n          onAddDisplayNameClick = _this$props2.onAddDisplayNameClick,\n          onChangeDisplayNameClick = _this$props2.onChangeDisplayNameClick,\n          onAddEmailAddressClick = _this$props2.onAddEmailAddressClick;\n      var verifyEmailAddressDialog = this.state.verifyEmailAddressDialog;\n      var isUserComplete = user.photoURL && user.displayName && user.email;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Profile, {\n        user: user,\n        isPerformingAuthAction: isPerformingAuthAction,\n        extraTopMargin: true,\n        onChangeAvatarClick: onChangeAvatarClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(DialogContentText, {\n        classes: {\n          root: classes.root\n        },\n        className: isUserComplete && classes.dialogContentTextUserComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Here's some info about your account. You can manage your account through the tabs.\"), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, !user.photoURL && React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(PortraitIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), React.createElement(ListItemText, {\n        primary: \"You don't have an avatar. Add one!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        disabled: isPerformingAuthAction,\n        variant: \"contained\",\n        onClick: onAddAvatarClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Add\"))), user.displayName && React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Display name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(PersonIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))), React.createElement(ListItemText, {\n        primary: \"Display name\",\n        secondary: user.displayName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Change\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        disabled: isPerformingAuthAction,\n        onClick: onChangeDisplayNameClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(EditIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))))), !user.displayName && React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Display name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(PersonIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }))), React.createElement(ListItemText, {\n        primary: \"You don't have a display name. Add one!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        disabled: isPerformingAuthAction,\n        variant: \"contained\",\n        onClick: onAddDisplayNameClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Add\"))), user.email && React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"E-mail address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(EmailIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }))), React.createElement(ListItemText, {\n        primary: user.email,\n        secondary: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, user.emailVerified && 'Verified', !user.emailVerified && isVerifyingEmailAddress && 'Awaiting e-mail address verification', !user.emailVerified && !isVerifyingEmailAddress && 'Not verified'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), !user.emailVerified && React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, isVerifyingEmailAddress && React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), !isVerifyingEmailAddress && React.createElement(Button, {\n        color: \"primary\",\n        disabled: isPerformingAuthAction,\n        variant: \"contained\",\n        onClick: this.openVerifyEmailAddressDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Verify\"))), !user.email && React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"E-mail address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(EmailIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))), React.createElement(ListItemText, {\n        primary: \"You don't have an e-mail address. Add one!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        disabled: isPerformingAuthAction,\n        variant: \"contained\",\n        onClick: onAddEmailAddressClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Add\"))), user.metadata.lastSignInTime && React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Last sign-in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(AccessTimeIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(ListItemText, {\n        primary: \"Last sign-in\",\n        secondary: moment(user.metadata.lastSignInTime).format('LLLL'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), user.metadata.creationTime && React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Signed up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(AccessTimeIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }))), React.createElement(ListItemText, {\n        primary: \"Signed up\",\n        secondary: moment(user.metadata.creationTime).format('LLLL'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }))), React.createElement(ConfirmationDialog, {\n        open: verifyEmailAddressDialog.open,\n        title: \"Send verification e-mail?\",\n        contentText: \"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\",\n        okText: \"Send\",\n        disableOkButton: isPerformingAuthAction,\n        highlightOkButton: true,\n        onClose: this.closeVerifyEmailAddressDialog,\n        onCancelClick: this.closeVerifyEmailAddressDialog,\n        onOkClick: this.verifyEmailAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AccountTab;\n}(Component);\n\nAccountTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n  onAddAvatarClick: PropTypes.func.isRequired,\n  onChangeAvatarClick: PropTypes.func.isRequired,\n  onAddDisplayNameClick: PropTypes.func.isRequired,\n  onChangeDisplayNameClick: PropTypes.func.isRequired,\n  onAddEmailAddressClick: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(AccountTab);","map":{"version":3,"sources":["C:\\Users\\xlind\\Documents\\ASUFootballEquipment\\app\\src\\tabs\\settings\\AccountTab\\AccountTab.js"],"names":["React","Component","PropTypes","moment","withStyles","DialogContentText","List","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","Tooltip","IconButton","Button","CircularProgress","EditIcon","PortraitIcon","PersonIcon","EmailIcon","AccessTimeIcon","Profile","ConfirmationDialog","styles","theme","root","marginBottom","spacing","dialogContentTextUserComplete","marginTop","AccountTab","props","openVerifyEmailAddressDialog","setState","verifyEmailAddressDialog","open","closeVerifyEmailAddressDialog","callback","verifyEmailAddress","onVerifyEmailAddressClick","state","classes","user","isPerformingAuthAction","isVerifyingEmailAddress","onAddAvatarClick","onChangeAvatarClick","onAddDisplayNameClick","onChangeDisplayNameClick","onAddEmailAddressClick","isUserComplete","photoURL","displayName","email","emailVerified","metadata","lastSignInTime","format","creationTime","propTypes","object","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport PortraitIcon from '@material-ui/icons/Portrait';\nimport PersonIcon from '@material-ui/icons/Person';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport Profile from '../../../layout/Profile/Profile';\n\nimport ConfirmationDialog from '../../../dialogs/ConfirmationDialog/ConfirmationDialog';\n\nconst styles = (theme) => ({\n  root: {\n    marginBottom: theme.spacing(0)\n  },\n\n  dialogContentTextUserComplete: {\n    marginTop: theme.spacing(1)\n  }\n});\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    };\n  }\n\n  openVerifyEmailAddressDialog = () => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: true\n      }\n    });\n  };\n\n  closeVerifyEmailAddressDialog = (callback) => {\n    this.setState({\n      verifyEmailAddressDialog: {\n        open: false\n      }\n    }, () => {\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  };\n\n  verifyEmailAddress = () => {\n    this.closeVerifyEmailAddressDialog(() => {\n      this.props.onVerifyEmailAddressClick();\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user, isPerformingAuthAction, isVerifyingEmailAddress } = this.props;\n\n    // Events\n    const { onAddAvatarClick, onChangeAvatarClick, onAddDisplayNameClick, onChangeDisplayNameClick, onAddEmailAddressClick } = this.props;\n\n    const { verifyEmailAddressDialog } = this.state;\n\n    const isUserComplete = (user.photoURL && user.displayName && user.email);\n\n    return (\n      <React.Fragment>\n        <Profile user={user} isPerformingAuthAction={isPerformingAuthAction} extraTopMargin onChangeAvatarClick={onChangeAvatarClick} />\n\n        <DialogContentText classes={{ root: classes.root }} className={isUserComplete && classes.dialogContentTextUserComplete}>\n          Here's some info about your account. You can manage your account through the tabs.\n        </DialogContentText>\n\n        <List>\n          {!user.photoURL &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Avatar\">\n                  <PortraitIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have an avatar. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddAvatarClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.displayName &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Display name\">\n                  <PersonIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Display name\" secondary={user.displayName} />\n\n              <ListItemSecondaryAction>\n                <Tooltip title=\"Change\">\n                  <IconButton disabled={isPerformingAuthAction} onClick={onChangeDisplayNameClick}>\n                    <EditIcon />\n                  </IconButton>\n                </Tooltip>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {!user.displayName &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Display name\">\n                  <PersonIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have a display name. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddDisplayNameClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.email &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"E-mail address\">\n                  <EmailIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText\n                primary={user.email}\n                secondary={\n                  <React.Fragment>\n                    {user.emailVerified && 'Verified'}\n                    {(!user.emailVerified && isVerifyingEmailAddress) && 'Awaiting e-mail address verification'}\n                    {(!user.emailVerified && !isVerifyingEmailAddress) && 'Not verified'}\n                  </React.Fragment>\n                }\n              />\n\n              {!user.emailVerified &&\n                <ListItemSecondaryAction>\n                  {isVerifyingEmailAddress && <CircularProgress />}\n                  {!isVerifyingEmailAddress && <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={this.openVerifyEmailAddressDialog}>Verify</Button>}\n                </ListItemSecondaryAction>\n              }\n            </ListItem>\n          }\n\n          {!user.email &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"E-mail address\">\n                  <EmailIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"You don't have an e-mail address. Add one!\" />\n\n              <ListItemSecondaryAction>\n                <Button color=\"primary\" disabled={isPerformingAuthAction} variant=\"contained\" onClick={onAddEmailAddressClick}>Add</Button>\n              </ListItemSecondaryAction>\n            </ListItem>\n          }\n\n          {user.metadata.lastSignInTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Last sign-in\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Last sign-in\" secondary={moment(user.metadata.lastSignInTime).format('LLLL')} />\n            </ListItem>\n          }\n\n          {user.metadata.creationTime &&\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Signed up\">\n                  <AccessTimeIcon />\n                </Tooltip>\n              </ListItemIcon>\n\n              <ListItemText primary=\"Signed up\" secondary={moment(user.metadata.creationTime).format('LLLL')} />\n            </ListItem>\n          }\n        </List>\n\n        <ConfirmationDialog\n          open={verifyEmailAddressDialog.open}\n\n          title=\"Send verification e-mail?\"\n          contentText=\"An e-mail will be sent to your e-mail address containing instructions on how to verify your e-mail address.\"\n          okText=\"Send\"\n          disableOkButton={isPerformingAuthAction}\n          highlightOkButton\n\n          onClose={this.closeVerifyEmailAddressDialog}\n\n          onCancelClick={this.closeVerifyEmailAddressDialog}\n          onOkClick={this.verifyEmailAddress}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAccountTab.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  user: PropTypes.object.isRequired,\n  isPerformingAuthAction: PropTypes.bool.isRequired,\n  isVerifyingEmailAddress: PropTypes.bool.isRequired,\n\n  onAddAvatarClick: PropTypes.func.isRequired,\n  onChangeAvatarClick: PropTypes.func.isRequired,\n  onAddDisplayNameClick: PropTypes.func.isRequired,\n  onChangeDisplayNameClick: PropTypes.func.isRequired,\n  onAddEmailAddressClick: PropTypes.func.isRequired,\n  onVerifyEmailAddressClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);"]},"metadata":{},"sourceType":"module"}